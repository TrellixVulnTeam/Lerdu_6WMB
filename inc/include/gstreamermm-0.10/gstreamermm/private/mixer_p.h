// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_MIXER_P_H
#define _GSTREAMERMM_MIXER_P_H


#include <glibmm/private/interface_p.h>

namespace Gst
{

class Mixer_Class : public Glib::Interface_Class
{
public:
  typedef Mixer CppObjectType;
  typedef GstMixer BaseObjectType;
  typedef GstMixerClass BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class Mixer;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static void set_volume_vfunc_callback(GstMixer* self, GstMixerTrack* track, gint* volumes);
  static void set_mute_vfunc_callback(GstMixer* self, GstMixerTrack* track, gboolean mute);
  static void set_record_vfunc_callback(GstMixer* self, GstMixerTrack* track, gboolean record);
  static void set_option_vfunc_callback(GstMixer* self, GstMixerOptions* opts, gchar* value);
  static const gchar* get_option_vfunc_callback(GstMixer* self, GstMixerOptions* opts);
  static GstMixerFlags get_mixer_flags_vfunc_callback(GstMixer* self);
  static void get_volume_vfunc_callback(GstMixer* self, GstMixerTrack* track, gint* volumes);
  static const GList* list_tracks_vfunc_callback(GstMixer* self);
  };


} // namespace Gst


#endif /* _GSTREAMERMM_MIXER_P_H */

