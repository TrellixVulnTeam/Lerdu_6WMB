// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_BASESRC_P_H
#define _GSTREAMERMM_BASESRC_P_H


#include <glibmm/class.h>

namespace Gst
{

class BaseSrc_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef BaseSrc CppObjectType;
  typedef GstBaseSrc BaseObjectType;
  typedef GstBaseSrcClass BaseClassType;
  typedef Element_Class CppClassParent;
  typedef GstElementClass BaseClassParent;

  friend class BaseSrc;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static GstCaps* get_caps_vfunc_callback(GstBaseSrc* self);
  static gboolean set_caps_vfunc_callback(GstBaseSrc* self, GstCaps* caps);
  static gboolean negotiate_vfunc_callback(GstBaseSrc* self);
  static gboolean newsegment_vfunc_callback(GstBaseSrc* self);
  static gboolean start_vfunc_callback(GstBaseSrc* self);
  static gboolean stop_vfunc_callback(GstBaseSrc* self);
  static void get_times_vfunc_callback(GstBaseSrc* self, GstBuffer* buffer, GstClockTime* start, GstClockTime* end);
  static gboolean get_size_vfunc_callback(GstBaseSrc* self, guint64* size);
  static gboolean is_seekable_vfunc_callback(GstBaseSrc* self);
  static gboolean unlock_vfunc_callback(GstBaseSrc* self);
  static gboolean event_vfunc_callback(GstBaseSrc* self, GstEvent* event);
  static gboolean check_get_range_vfunc_callback(GstBaseSrc* self);
  static void fixate_vfunc_callback(GstBaseSrc* self, GstCaps* caps);
  static gboolean unlock_stop_vfunc_callback(GstBaseSrc* self);
  static gboolean do_seek_vfunc_callback(GstBaseSrc* self, GstSegment* segment);
  static gboolean prepare_seek_segment_vfunc_callback(GstBaseSrc* self, GstEvent* seek, GstSegment* segment);
  static GstFlowReturn create_vfunc_callback(GstBaseSrc* self, guint64 offset, guint size, GstBuffer** buf);
  };


} // namespace Gst

#include <gstreamermm/private/element_p.h>


#endif /* _GSTREAMERMM_BASESRC_P_H */

