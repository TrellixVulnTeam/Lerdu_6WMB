// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_TUNER_P_H
#define _GSTREAMERMM_TUNER_P_H


#include <glibmm/private/interface_p.h>

namespace Gst
{

class Tuner_Class : public Glib::Interface_Class
{
public:
  typedef Tuner CppObjectType;
  typedef GstTuner BaseObjectType;
  typedef GstTunerClass BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class Tuner;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void channel_changed_callback(GstTuner* self, GstTunerChannel* p0);
  static void frequency_changed_callback(GstTuner* self, GstTunerChannel* p0, gulong p1);
  static void norm_changed_callback(GstTuner* self, GstTunerNorm* p0);
  static void signal_changed_callback(GstTuner* self, GstTunerChannel* p0, gint p1);

  //Callbacks (virtual functions):
  static void set_channel_vfunc_callback(GstTuner* self, GstTunerChannel* channel);
  static GstTunerChannel* get_channel_vfunc_callback(GstTuner* self);
  static void set_norm_vfunc_callback(GstTuner* self, GstTunerNorm* norm);
  static GstTunerNorm* get_norm_vfunc_callback(GstTuner* self);
  static void set_frequency_vfunc_callback(GstTuner* self, GstTunerChannel* channel, gulong frequency);
  static gulong get_frequency_vfunc_callback(GstTuner* self, GstTunerChannel* channel);
  static gint signal_strength_vfunc_callback(GstTuner* self, GstTunerChannel* channel);
  static const GList* list_channels_vfunc_callback(GstTuner* self);
  static const GList* list_norms_vfunc_callback(GstTuner* self);
  };


} // namespace Gst


#endif /* _GSTREAMERMM_TUNER_P_H */

