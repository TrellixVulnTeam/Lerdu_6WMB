// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_PROPERTYPROBE_P_H
#define _GSTREAMERMM_PROPERTYPROBE_P_H


#include <glibmm/private/interface_p.h>

namespace Gst
{

class PropertyProbe_Class : public Glib::Interface_Class
{
public:
  typedef PropertyProbe CppObjectType;
  typedef GstPropertyProbe BaseObjectType;
  typedef GstPropertyProbeInterface BaseClassType;
  typedef Glib::Interface_Class CppClassParent;

  friend class PropertyProbe;

  const Glib::Interface_Class& init();

  static void iface_init_function(void* g_iface, void* iface_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.
  static void probe_needed_callback(GstPropertyProbe* self, const GParamSpec* p0);

  //Callbacks (virtual functions):
  static const GList* get_properties_vfunc_callback(GstPropertyProbe* self);
  static gboolean needs_probe_vfunc_callback(GstPropertyProbe* self, guint prop_id, const GParamSpec* pspec);
  static void probe_property_vfunc_callback(GstPropertyProbe* self, guint prop_id, const GParamSpec* pspec);
  static GValueArray* get_values_vfunc_callback(GstPropertyProbe* self, guint prop_id, const GParamSpec* pspec);
};


} // namespace Gst


#endif /* _GSTREAMERMM_PROPERTYPROBE_P_H */

