// -*- c++ -*-
// Generated by gtkmmproc -- DO NOT MODIFY!
#ifndef _GSTREAMERMM_RINGBUFFER_P_H
#define _GSTREAMERMM_RINGBUFFER_P_H


#include <glibmm/class.h>

namespace Gst
{

class RingBuffer_Class : public Glib::Class
{
public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef RingBuffer CppObjectType;
  typedef GstRingBuffer BaseObjectType;
  typedef GstRingBufferClass BaseClassType;
  typedef Gst::Object_Class CppClassParent;
  typedef GstObjectClass BaseClassParent;

  friend class RingBuffer;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();


  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

protected:

  //Callbacks (default signal handlers):
  //These will call the *_impl member methods, which will then call the existing default signal callbacks, if any.
  //You could prevent the original default signal handlers being called by overriding the *_impl method.

  //Callbacks (virtual functions):
  static gboolean open_device_vfunc_callback(GstRingBuffer* self);
  static gboolean release_vfunc_callback(GstRingBuffer* self);
  static gboolean close_device_vfunc_callback(GstRingBuffer* self);
  static gboolean start_vfunc_callback(GstRingBuffer* self);
  static gboolean pause_vfunc_callback(GstRingBuffer* self);
  static gboolean resume_vfunc_callback(GstRingBuffer* self);
  static gboolean stop_vfunc_callback(GstRingBuffer* self);
  static guint delay_vfunc_callback(GstRingBuffer* self);
  static gboolean activate_vfunc_callback(GstRingBuffer* self, gboolean active);
  static void clear_all_vfunc_callback(GstRingBuffer* self);
  static gboolean acquire_vfunc_callback(GstRingBuffer* self, GstRingBufferSpec* spec);
  static guint commit_vfunc_callback(GstRingBuffer* self, guint64* sample, guchar* data, gint in_samples, gint out_samples, gint* accum);
  };


} // namespace Gst

#include <gstreamermm/private/object_p.h>


#endif /* _GSTREAMERMM_RINGBUFFER_P_H */

