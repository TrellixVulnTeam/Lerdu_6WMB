/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef interface_repository_H
#define interface_repository_H 1
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_CORBA_Identifier_defined)
#define _CORBA_Identifier_defined 1
typedef CORBA_char * CORBA_Identifier;
#if !defined(TC_IMPL_TC_CORBA_Identifier_0)
#define TC_IMPL_TC_CORBA_Identifier_0 'i'
#define TC_IMPL_TC_CORBA_Identifier_1 'n'
#define TC_IMPL_TC_CORBA_Identifier_2 't'
#define TC_IMPL_TC_CORBA_Identifier_3 'e'
#define TC_IMPL_TC_CORBA_Identifier_4 'r'
#define TC_IMPL_TC_CORBA_Identifier_5 'f'
#define TC_IMPL_TC_CORBA_Identifier_6 'a'
#define TC_IMPL_TC_CORBA_Identifier_7 'c'
#define TC_IMPL_TC_CORBA_Identifier_8 'e'
#define TC_IMPL_TC_CORBA_Identifier_9 '_'
#define TC_IMPL_TC_CORBA_Identifier_10 'r'
#define TC_IMPL_TC_CORBA_Identifier_11 'e'
#define TC_IMPL_TC_CORBA_Identifier_12 'p'
#define TC_IMPL_TC_CORBA_Identifier_13 'o'
#define TC_IMPL_TC_CORBA_Identifier_14 's'
#define TC_IMPL_TC_CORBA_Identifier_15 'i'
#define TC_IMPL_TC_CORBA_Identifier_16 't'
#define TC_IMPL_TC_CORBA_Identifier_17 'o'
#define TC_IMPL_TC_CORBA_Identifier_18 'r'
#define TC_IMPL_TC_CORBA_Identifier_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Identifier_struct;
#define TC_CORBA_Identifier ((CORBA_TypeCode)&TC_CORBA_Identifier_struct)
#endif
#define CORBA_Identifier__free CORBA_string__free
#endif
#if !defined(_CORBA_ScopedName_defined)
#define _CORBA_ScopedName_defined 1
typedef CORBA_char * CORBA_ScopedName;
#if !defined(TC_IMPL_TC_CORBA_ScopedName_0)
#define TC_IMPL_TC_CORBA_ScopedName_0 'i'
#define TC_IMPL_TC_CORBA_ScopedName_1 'n'
#define TC_IMPL_TC_CORBA_ScopedName_2 't'
#define TC_IMPL_TC_CORBA_ScopedName_3 'e'
#define TC_IMPL_TC_CORBA_ScopedName_4 'r'
#define TC_IMPL_TC_CORBA_ScopedName_5 'f'
#define TC_IMPL_TC_CORBA_ScopedName_6 'a'
#define TC_IMPL_TC_CORBA_ScopedName_7 'c'
#define TC_IMPL_TC_CORBA_ScopedName_8 'e'
#define TC_IMPL_TC_CORBA_ScopedName_9 '_'
#define TC_IMPL_TC_CORBA_ScopedName_10 'r'
#define TC_IMPL_TC_CORBA_ScopedName_11 'e'
#define TC_IMPL_TC_CORBA_ScopedName_12 'p'
#define TC_IMPL_TC_CORBA_ScopedName_13 'o'
#define TC_IMPL_TC_CORBA_ScopedName_14 's'
#define TC_IMPL_TC_CORBA_ScopedName_15 'i'
#define TC_IMPL_TC_CORBA_ScopedName_16 't'
#define TC_IMPL_TC_CORBA_ScopedName_17 'o'
#define TC_IMPL_TC_CORBA_ScopedName_18 'r'
#define TC_IMPL_TC_CORBA_ScopedName_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ScopedName_struct;
#define TC_CORBA_ScopedName ((CORBA_TypeCode)&TC_CORBA_ScopedName_struct)
#endif
#define CORBA_ScopedName__free CORBA_string__free
#endif
#if !defined(_CORBA_RepositoryId_defined)
#define _CORBA_RepositoryId_defined 1
typedef CORBA_char * CORBA_RepositoryId;
#if !defined(TC_IMPL_TC_CORBA_RepositoryId_0)
#define TC_IMPL_TC_CORBA_RepositoryId_0 'i'
#define TC_IMPL_TC_CORBA_RepositoryId_1 'n'
#define TC_IMPL_TC_CORBA_RepositoryId_2 't'
#define TC_IMPL_TC_CORBA_RepositoryId_3 'e'
#define TC_IMPL_TC_CORBA_RepositoryId_4 'r'
#define TC_IMPL_TC_CORBA_RepositoryId_5 'f'
#define TC_IMPL_TC_CORBA_RepositoryId_6 'a'
#define TC_IMPL_TC_CORBA_RepositoryId_7 'c'
#define TC_IMPL_TC_CORBA_RepositoryId_8 'e'
#define TC_IMPL_TC_CORBA_RepositoryId_9 '_'
#define TC_IMPL_TC_CORBA_RepositoryId_10 'r'
#define TC_IMPL_TC_CORBA_RepositoryId_11 'e'
#define TC_IMPL_TC_CORBA_RepositoryId_12 'p'
#define TC_IMPL_TC_CORBA_RepositoryId_13 'o'
#define TC_IMPL_TC_CORBA_RepositoryId_14 's'
#define TC_IMPL_TC_CORBA_RepositoryId_15 'i'
#define TC_IMPL_TC_CORBA_RepositoryId_16 't'
#define TC_IMPL_TC_CORBA_RepositoryId_17 'o'
#define TC_IMPL_TC_CORBA_RepositoryId_18 'r'
#define TC_IMPL_TC_CORBA_RepositoryId_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_RepositoryId_struct;
#define TC_CORBA_RepositoryId ((CORBA_TypeCode)&TC_CORBA_RepositoryId_struct)
#endif
#define CORBA_RepositoryId__free CORBA_string__free
#endif
#if !defined(_CORBA_DefinitionKind_defined)
#define _CORBA_DefinitionKind_defined 1
typedef enum {
  CORBA_dk_none,
  CORBA_dk_all,
  CORBA_dk_Attribute,
  CORBA_dk_Constant,
  CORBA_dk_Exception,
  CORBA_dk_Interface,
  CORBA_dk_Module,
  CORBA_dk_Operation,
  CORBA_dk_Typedef,
  CORBA_dk_Alias,
  CORBA_dk_Struct,
  CORBA_dk_Union,
  CORBA_dk_Enum,
  CORBA_dk_Primitive,
  CORBA_dk_String,
  CORBA_dk_Sequence,
  CORBA_dk_Array,
  CORBA_dk_Repository,
  CORBA_dk_Wstring,
  CORBA_dk_Fixed
} CORBA_DefinitionKind;
#if !defined(TC_IMPL_TC_CORBA_DefinitionKind_0)
#define TC_IMPL_TC_CORBA_DefinitionKind_0 'i'
#define TC_IMPL_TC_CORBA_DefinitionKind_1 'n'
#define TC_IMPL_TC_CORBA_DefinitionKind_2 't'
#define TC_IMPL_TC_CORBA_DefinitionKind_3 'e'
#define TC_IMPL_TC_CORBA_DefinitionKind_4 'r'
#define TC_IMPL_TC_CORBA_DefinitionKind_5 'f'
#define TC_IMPL_TC_CORBA_DefinitionKind_6 'a'
#define TC_IMPL_TC_CORBA_DefinitionKind_7 'c'
#define TC_IMPL_TC_CORBA_DefinitionKind_8 'e'
#define TC_IMPL_TC_CORBA_DefinitionKind_9 '_'
#define TC_IMPL_TC_CORBA_DefinitionKind_10 'r'
#define TC_IMPL_TC_CORBA_DefinitionKind_11 'e'
#define TC_IMPL_TC_CORBA_DefinitionKind_12 'p'
#define TC_IMPL_TC_CORBA_DefinitionKind_13 'o'
#define TC_IMPL_TC_CORBA_DefinitionKind_14 's'
#define TC_IMPL_TC_CORBA_DefinitionKind_15 'i'
#define TC_IMPL_TC_CORBA_DefinitionKind_16 't'
#define TC_IMPL_TC_CORBA_DefinitionKind_17 'o'
#define TC_IMPL_TC_CORBA_DefinitionKind_18 'r'
#define TC_IMPL_TC_CORBA_DefinitionKind_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_DefinitionKind_struct;
#define TC_CORBA_DefinitionKind ((CORBA_TypeCode)&TC_CORBA_DefinitionKind_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_IRObject) && !defined(_CORBA_IRObject_defined)
#define ORBIT_DECL_CORBA_IRObject 1
#define _CORBA_IRObject_defined 1
#define CORBA_IRObject__free CORBA_Object__free
typedef CORBA_Object CORBA_IRObject;
extern CORBA_unsigned_long CORBA_IRObject__classid;
#if !defined(TC_IMPL_TC_CORBA_IRObject_0)
#define TC_IMPL_TC_CORBA_IRObject_0 'i'
#define TC_IMPL_TC_CORBA_IRObject_1 'n'
#define TC_IMPL_TC_CORBA_IRObject_2 't'
#define TC_IMPL_TC_CORBA_IRObject_3 'e'
#define TC_IMPL_TC_CORBA_IRObject_4 'r'
#define TC_IMPL_TC_CORBA_IRObject_5 'f'
#define TC_IMPL_TC_CORBA_IRObject_6 'a'
#define TC_IMPL_TC_CORBA_IRObject_7 'c'
#define TC_IMPL_TC_CORBA_IRObject_8 'e'
#define TC_IMPL_TC_CORBA_IRObject_9 '_'
#define TC_IMPL_TC_CORBA_IRObject_10 'r'
#define TC_IMPL_TC_CORBA_IRObject_11 'e'
#define TC_IMPL_TC_CORBA_IRObject_12 'p'
#define TC_IMPL_TC_CORBA_IRObject_13 'o'
#define TC_IMPL_TC_CORBA_IRObject_14 's'
#define TC_IMPL_TC_CORBA_IRObject_15 'i'
#define TC_IMPL_TC_CORBA_IRObject_16 't'
#define TC_IMPL_TC_CORBA_IRObject_17 'o'
#define TC_IMPL_TC_CORBA_IRObject_18 'r'
#define TC_IMPL_TC_CORBA_IRObject_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_IRObject_struct;
#define TC_CORBA_IRObject ((CORBA_TypeCode)&TC_CORBA_IRObject_struct)
#endif
#endif
#if !defined(_CORBA_VersionSpec_defined)
#define _CORBA_VersionSpec_defined 1
typedef CORBA_char * CORBA_VersionSpec;
#if !defined(TC_IMPL_TC_CORBA_VersionSpec_0)
#define TC_IMPL_TC_CORBA_VersionSpec_0 'i'
#define TC_IMPL_TC_CORBA_VersionSpec_1 'n'
#define TC_IMPL_TC_CORBA_VersionSpec_2 't'
#define TC_IMPL_TC_CORBA_VersionSpec_3 'e'
#define TC_IMPL_TC_CORBA_VersionSpec_4 'r'
#define TC_IMPL_TC_CORBA_VersionSpec_5 'f'
#define TC_IMPL_TC_CORBA_VersionSpec_6 'a'
#define TC_IMPL_TC_CORBA_VersionSpec_7 'c'
#define TC_IMPL_TC_CORBA_VersionSpec_8 'e'
#define TC_IMPL_TC_CORBA_VersionSpec_9 '_'
#define TC_IMPL_TC_CORBA_VersionSpec_10 'r'
#define TC_IMPL_TC_CORBA_VersionSpec_11 'e'
#define TC_IMPL_TC_CORBA_VersionSpec_12 'p'
#define TC_IMPL_TC_CORBA_VersionSpec_13 'o'
#define TC_IMPL_TC_CORBA_VersionSpec_14 's'
#define TC_IMPL_TC_CORBA_VersionSpec_15 'i'
#define TC_IMPL_TC_CORBA_VersionSpec_16 't'
#define TC_IMPL_TC_CORBA_VersionSpec_17 'o'
#define TC_IMPL_TC_CORBA_VersionSpec_18 'r'
#define TC_IMPL_TC_CORBA_VersionSpec_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_VersionSpec_struct;
#define TC_CORBA_VersionSpec ((CORBA_TypeCode)&TC_CORBA_VersionSpec_struct)
#endif
#define CORBA_VersionSpec__free CORBA_string__free
#endif
#if !defined(ORBIT_DECL_CORBA_Contained) && !defined(_CORBA_Contained_defined)
#define ORBIT_DECL_CORBA_Contained 1
#define _CORBA_Contained_defined 1
#define CORBA_Contained__free CORBA_Object__free
typedef CORBA_Object CORBA_Contained;
extern CORBA_unsigned_long CORBA_Contained__classid;
#if !defined(TC_IMPL_TC_CORBA_Contained_0)
#define TC_IMPL_TC_CORBA_Contained_0 'i'
#define TC_IMPL_TC_CORBA_Contained_1 'n'
#define TC_IMPL_TC_CORBA_Contained_2 't'
#define TC_IMPL_TC_CORBA_Contained_3 'e'
#define TC_IMPL_TC_CORBA_Contained_4 'r'
#define TC_IMPL_TC_CORBA_Contained_5 'f'
#define TC_IMPL_TC_CORBA_Contained_6 'a'
#define TC_IMPL_TC_CORBA_Contained_7 'c'
#define TC_IMPL_TC_CORBA_Contained_8 'e'
#define TC_IMPL_TC_CORBA_Contained_9 '_'
#define TC_IMPL_TC_CORBA_Contained_10 'r'
#define TC_IMPL_TC_CORBA_Contained_11 'e'
#define TC_IMPL_TC_CORBA_Contained_12 'p'
#define TC_IMPL_TC_CORBA_Contained_13 'o'
#define TC_IMPL_TC_CORBA_Contained_14 's'
#define TC_IMPL_TC_CORBA_Contained_15 'i'
#define TC_IMPL_TC_CORBA_Contained_16 't'
#define TC_IMPL_TC_CORBA_Contained_17 'o'
#define TC_IMPL_TC_CORBA_Contained_18 'r'
#define TC_IMPL_TC_CORBA_Contained_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Contained_struct;
#define TC_CORBA_Contained ((CORBA_TypeCode)&TC_CORBA_Contained_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_Repository) && !defined(_CORBA_Repository_defined)
#define ORBIT_DECL_CORBA_Repository 1
#define _CORBA_Repository_defined 1
#define CORBA_Repository__free CORBA_Object__free
typedef CORBA_Object CORBA_Repository;
extern CORBA_unsigned_long CORBA_Repository__classid;
#if !defined(TC_IMPL_TC_CORBA_Repository_0)
#define TC_IMPL_TC_CORBA_Repository_0 'i'
#define TC_IMPL_TC_CORBA_Repository_1 'n'
#define TC_IMPL_TC_CORBA_Repository_2 't'
#define TC_IMPL_TC_CORBA_Repository_3 'e'
#define TC_IMPL_TC_CORBA_Repository_4 'r'
#define TC_IMPL_TC_CORBA_Repository_5 'f'
#define TC_IMPL_TC_CORBA_Repository_6 'a'
#define TC_IMPL_TC_CORBA_Repository_7 'c'
#define TC_IMPL_TC_CORBA_Repository_8 'e'
#define TC_IMPL_TC_CORBA_Repository_9 '_'
#define TC_IMPL_TC_CORBA_Repository_10 'r'
#define TC_IMPL_TC_CORBA_Repository_11 'e'
#define TC_IMPL_TC_CORBA_Repository_12 'p'
#define TC_IMPL_TC_CORBA_Repository_13 'o'
#define TC_IMPL_TC_CORBA_Repository_14 's'
#define TC_IMPL_TC_CORBA_Repository_15 'i'
#define TC_IMPL_TC_CORBA_Repository_16 't'
#define TC_IMPL_TC_CORBA_Repository_17 'o'
#define TC_IMPL_TC_CORBA_Repository_18 'r'
#define TC_IMPL_TC_CORBA_Repository_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Repository_struct;
#define TC_CORBA_Repository ((CORBA_TypeCode)&TC_CORBA_Repository_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_Container) && !defined(_CORBA_Container_defined)
#define ORBIT_DECL_CORBA_Container 1
#define _CORBA_Container_defined 1
#define CORBA_Container__free CORBA_Object__free
typedef CORBA_Object CORBA_Container;
extern CORBA_unsigned_long CORBA_Container__classid;
#if !defined(TC_IMPL_TC_CORBA_Container_0)
#define TC_IMPL_TC_CORBA_Container_0 'i'
#define TC_IMPL_TC_CORBA_Container_1 'n'
#define TC_IMPL_TC_CORBA_Container_2 't'
#define TC_IMPL_TC_CORBA_Container_3 'e'
#define TC_IMPL_TC_CORBA_Container_4 'r'
#define TC_IMPL_TC_CORBA_Container_5 'f'
#define TC_IMPL_TC_CORBA_Container_6 'a'
#define TC_IMPL_TC_CORBA_Container_7 'c'
#define TC_IMPL_TC_CORBA_Container_8 'e'
#define TC_IMPL_TC_CORBA_Container_9 '_'
#define TC_IMPL_TC_CORBA_Container_10 'r'
#define TC_IMPL_TC_CORBA_Container_11 'e'
#define TC_IMPL_TC_CORBA_Container_12 'p'
#define TC_IMPL_TC_CORBA_Container_13 'o'
#define TC_IMPL_TC_CORBA_Container_14 's'
#define TC_IMPL_TC_CORBA_Container_15 'i'
#define TC_IMPL_TC_CORBA_Container_16 't'
#define TC_IMPL_TC_CORBA_Container_17 'o'
#define TC_IMPL_TC_CORBA_Container_18 'r'
#define TC_IMPL_TC_CORBA_Container_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Container_struct;
#define TC_CORBA_Container ((CORBA_TypeCode)&TC_CORBA_Container_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_Contained) && !defined(_CORBA_Contained_defined)
#define ORBIT_DECL_CORBA_Contained 1
#define _CORBA_Contained_defined 1
#define CORBA_Contained__free CORBA_Object__free
typedef CORBA_Object CORBA_Contained;
extern CORBA_unsigned_long CORBA_Contained__classid;
#if !defined(TC_IMPL_TC_CORBA_Contained_0)
#define TC_IMPL_TC_CORBA_Contained_0 'i'
#define TC_IMPL_TC_CORBA_Contained_1 'n'
#define TC_IMPL_TC_CORBA_Contained_2 't'
#define TC_IMPL_TC_CORBA_Contained_3 'e'
#define TC_IMPL_TC_CORBA_Contained_4 'r'
#define TC_IMPL_TC_CORBA_Contained_5 'f'
#define TC_IMPL_TC_CORBA_Contained_6 'a'
#define TC_IMPL_TC_CORBA_Contained_7 'c'
#define TC_IMPL_TC_CORBA_Contained_8 'e'
#define TC_IMPL_TC_CORBA_Contained_9 '_'
#define TC_IMPL_TC_CORBA_Contained_10 'r'
#define TC_IMPL_TC_CORBA_Contained_11 'e'
#define TC_IMPL_TC_CORBA_Contained_12 'p'
#define TC_IMPL_TC_CORBA_Contained_13 'o'
#define TC_IMPL_TC_CORBA_Contained_14 's'
#define TC_IMPL_TC_CORBA_Contained_15 'i'
#define TC_IMPL_TC_CORBA_Contained_16 't'
#define TC_IMPL_TC_CORBA_Contained_17 'o'
#define TC_IMPL_TC_CORBA_Contained_18 'r'
#define TC_IMPL_TC_CORBA_Contained_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Contained_struct;
#define TC_CORBA_Contained ((CORBA_TypeCode)&TC_CORBA_Contained_struct)
#endif
#endif
#if !defined(_CORBA_Contained_Description_defined)
#define _CORBA_Contained_Description_defined 1
typedef struct {
CORBA_DefinitionKind kind;
CORBA_any value;
} CORBA_Contained_Description;

#if !defined(TC_IMPL_TC_CORBA_Contained_Description_0)
#define TC_IMPL_TC_CORBA_Contained_Description_0 'i'
#define TC_IMPL_TC_CORBA_Contained_Description_1 'n'
#define TC_IMPL_TC_CORBA_Contained_Description_2 't'
#define TC_IMPL_TC_CORBA_Contained_Description_3 'e'
#define TC_IMPL_TC_CORBA_Contained_Description_4 'r'
#define TC_IMPL_TC_CORBA_Contained_Description_5 'f'
#define TC_IMPL_TC_CORBA_Contained_Description_6 'a'
#define TC_IMPL_TC_CORBA_Contained_Description_7 'c'
#define TC_IMPL_TC_CORBA_Contained_Description_8 'e'
#define TC_IMPL_TC_CORBA_Contained_Description_9 '_'
#define TC_IMPL_TC_CORBA_Contained_Description_10 'r'
#define TC_IMPL_TC_CORBA_Contained_Description_11 'e'
#define TC_IMPL_TC_CORBA_Contained_Description_12 'p'
#define TC_IMPL_TC_CORBA_Contained_Description_13 'o'
#define TC_IMPL_TC_CORBA_Contained_Description_14 's'
#define TC_IMPL_TC_CORBA_Contained_Description_15 'i'
#define TC_IMPL_TC_CORBA_Contained_Description_16 't'
#define TC_IMPL_TC_CORBA_Contained_Description_17 'o'
#define TC_IMPL_TC_CORBA_Contained_Description_18 'r'
#define TC_IMPL_TC_CORBA_Contained_Description_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Contained_Description_struct;
#define TC_CORBA_Contained_Description ((CORBA_TypeCode)&TC_CORBA_Contained_Description_struct)
#endif
extern CORBA_Contained_Description* CORBA_Contained_Description__alloc(void);
extern gpointer CORBA_Contained_Description__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_ModuleDef) && !defined(_CORBA_ModuleDef_defined)
#define ORBIT_DECL_CORBA_ModuleDef 1
#define _CORBA_ModuleDef_defined 1
#define CORBA_ModuleDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ModuleDef;
extern CORBA_unsigned_long CORBA_ModuleDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ModuleDef_0)
#define TC_IMPL_TC_CORBA_ModuleDef_0 'i'
#define TC_IMPL_TC_CORBA_ModuleDef_1 'n'
#define TC_IMPL_TC_CORBA_ModuleDef_2 't'
#define TC_IMPL_TC_CORBA_ModuleDef_3 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_4 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_5 'f'
#define TC_IMPL_TC_CORBA_ModuleDef_6 'a'
#define TC_IMPL_TC_CORBA_ModuleDef_7 'c'
#define TC_IMPL_TC_CORBA_ModuleDef_8 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_9 '_'
#define TC_IMPL_TC_CORBA_ModuleDef_10 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_11 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_12 'p'
#define TC_IMPL_TC_CORBA_ModuleDef_13 'o'
#define TC_IMPL_TC_CORBA_ModuleDef_14 's'
#define TC_IMPL_TC_CORBA_ModuleDef_15 'i'
#define TC_IMPL_TC_CORBA_ModuleDef_16 't'
#define TC_IMPL_TC_CORBA_ModuleDef_17 'o'
#define TC_IMPL_TC_CORBA_ModuleDef_18 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ModuleDef_struct;
#define TC_CORBA_ModuleDef ((CORBA_TypeCode)&TC_CORBA_ModuleDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ConstantDef) && !defined(_CORBA_ConstantDef_defined)
#define ORBIT_DECL_CORBA_ConstantDef 1
#define _CORBA_ConstantDef_defined 1
#define CORBA_ConstantDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ConstantDef;
extern CORBA_unsigned_long CORBA_ConstantDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ConstantDef_0)
#define TC_IMPL_TC_CORBA_ConstantDef_0 'i'
#define TC_IMPL_TC_CORBA_ConstantDef_1 'n'
#define TC_IMPL_TC_CORBA_ConstantDef_2 't'
#define TC_IMPL_TC_CORBA_ConstantDef_3 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_4 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_5 'f'
#define TC_IMPL_TC_CORBA_ConstantDef_6 'a'
#define TC_IMPL_TC_CORBA_ConstantDef_7 'c'
#define TC_IMPL_TC_CORBA_ConstantDef_8 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_9 '_'
#define TC_IMPL_TC_CORBA_ConstantDef_10 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_11 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_12 'p'
#define TC_IMPL_TC_CORBA_ConstantDef_13 'o'
#define TC_IMPL_TC_CORBA_ConstantDef_14 's'
#define TC_IMPL_TC_CORBA_ConstantDef_15 'i'
#define TC_IMPL_TC_CORBA_ConstantDef_16 't'
#define TC_IMPL_TC_CORBA_ConstantDef_17 'o'
#define TC_IMPL_TC_CORBA_ConstantDef_18 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ConstantDef_struct;
#define TC_CORBA_ConstantDef ((CORBA_TypeCode)&TC_CORBA_ConstantDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_IDLType) && !defined(_CORBA_IDLType_defined)
#define ORBIT_DECL_CORBA_IDLType 1
#define _CORBA_IDLType_defined 1
#define CORBA_IDLType__free CORBA_Object__free
typedef CORBA_Object CORBA_IDLType;
extern CORBA_unsigned_long CORBA_IDLType__classid;
#if !defined(TC_IMPL_TC_CORBA_IDLType_0)
#define TC_IMPL_TC_CORBA_IDLType_0 'i'
#define TC_IMPL_TC_CORBA_IDLType_1 'n'
#define TC_IMPL_TC_CORBA_IDLType_2 't'
#define TC_IMPL_TC_CORBA_IDLType_3 'e'
#define TC_IMPL_TC_CORBA_IDLType_4 'r'
#define TC_IMPL_TC_CORBA_IDLType_5 'f'
#define TC_IMPL_TC_CORBA_IDLType_6 'a'
#define TC_IMPL_TC_CORBA_IDLType_7 'c'
#define TC_IMPL_TC_CORBA_IDLType_8 'e'
#define TC_IMPL_TC_CORBA_IDLType_9 '_'
#define TC_IMPL_TC_CORBA_IDLType_10 'r'
#define TC_IMPL_TC_CORBA_IDLType_11 'e'
#define TC_IMPL_TC_CORBA_IDLType_12 'p'
#define TC_IMPL_TC_CORBA_IDLType_13 'o'
#define TC_IMPL_TC_CORBA_IDLType_14 's'
#define TC_IMPL_TC_CORBA_IDLType_15 'i'
#define TC_IMPL_TC_CORBA_IDLType_16 't'
#define TC_IMPL_TC_CORBA_IDLType_17 'o'
#define TC_IMPL_TC_CORBA_IDLType_18 'r'
#define TC_IMPL_TC_CORBA_IDLType_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_IDLType_struct;
#define TC_CORBA_IDLType ((CORBA_TypeCode)&TC_CORBA_IDLType_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_StructDef) && !defined(_CORBA_StructDef_defined)
#define ORBIT_DECL_CORBA_StructDef 1
#define _CORBA_StructDef_defined 1
#define CORBA_StructDef__free CORBA_Object__free
typedef CORBA_Object CORBA_StructDef;
extern CORBA_unsigned_long CORBA_StructDef__classid;
#if !defined(TC_IMPL_TC_CORBA_StructDef_0)
#define TC_IMPL_TC_CORBA_StructDef_0 'i'
#define TC_IMPL_TC_CORBA_StructDef_1 'n'
#define TC_IMPL_TC_CORBA_StructDef_2 't'
#define TC_IMPL_TC_CORBA_StructDef_3 'e'
#define TC_IMPL_TC_CORBA_StructDef_4 'r'
#define TC_IMPL_TC_CORBA_StructDef_5 'f'
#define TC_IMPL_TC_CORBA_StructDef_6 'a'
#define TC_IMPL_TC_CORBA_StructDef_7 'c'
#define TC_IMPL_TC_CORBA_StructDef_8 'e'
#define TC_IMPL_TC_CORBA_StructDef_9 '_'
#define TC_IMPL_TC_CORBA_StructDef_10 'r'
#define TC_IMPL_TC_CORBA_StructDef_11 'e'
#define TC_IMPL_TC_CORBA_StructDef_12 'p'
#define TC_IMPL_TC_CORBA_StructDef_13 'o'
#define TC_IMPL_TC_CORBA_StructDef_14 's'
#define TC_IMPL_TC_CORBA_StructDef_15 'i'
#define TC_IMPL_TC_CORBA_StructDef_16 't'
#define TC_IMPL_TC_CORBA_StructDef_17 'o'
#define TC_IMPL_TC_CORBA_StructDef_18 'r'
#define TC_IMPL_TC_CORBA_StructDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StructDef_struct;
#define TC_CORBA_StructDef ((CORBA_TypeCode)&TC_CORBA_StructDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_UnionDef) && !defined(_CORBA_UnionDef_defined)
#define ORBIT_DECL_CORBA_UnionDef 1
#define _CORBA_UnionDef_defined 1
#define CORBA_UnionDef__free CORBA_Object__free
typedef CORBA_Object CORBA_UnionDef;
extern CORBA_unsigned_long CORBA_UnionDef__classid;
#if !defined(TC_IMPL_TC_CORBA_UnionDef_0)
#define TC_IMPL_TC_CORBA_UnionDef_0 'i'
#define TC_IMPL_TC_CORBA_UnionDef_1 'n'
#define TC_IMPL_TC_CORBA_UnionDef_2 't'
#define TC_IMPL_TC_CORBA_UnionDef_3 'e'
#define TC_IMPL_TC_CORBA_UnionDef_4 'r'
#define TC_IMPL_TC_CORBA_UnionDef_5 'f'
#define TC_IMPL_TC_CORBA_UnionDef_6 'a'
#define TC_IMPL_TC_CORBA_UnionDef_7 'c'
#define TC_IMPL_TC_CORBA_UnionDef_8 'e'
#define TC_IMPL_TC_CORBA_UnionDef_9 '_'
#define TC_IMPL_TC_CORBA_UnionDef_10 'r'
#define TC_IMPL_TC_CORBA_UnionDef_11 'e'
#define TC_IMPL_TC_CORBA_UnionDef_12 'p'
#define TC_IMPL_TC_CORBA_UnionDef_13 'o'
#define TC_IMPL_TC_CORBA_UnionDef_14 's'
#define TC_IMPL_TC_CORBA_UnionDef_15 'i'
#define TC_IMPL_TC_CORBA_UnionDef_16 't'
#define TC_IMPL_TC_CORBA_UnionDef_17 'o'
#define TC_IMPL_TC_CORBA_UnionDef_18 'r'
#define TC_IMPL_TC_CORBA_UnionDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_UnionDef_struct;
#define TC_CORBA_UnionDef ((CORBA_TypeCode)&TC_CORBA_UnionDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_EnumDef) && !defined(_CORBA_EnumDef_defined)
#define ORBIT_DECL_CORBA_EnumDef 1
#define _CORBA_EnumDef_defined 1
#define CORBA_EnumDef__free CORBA_Object__free
typedef CORBA_Object CORBA_EnumDef;
extern CORBA_unsigned_long CORBA_EnumDef__classid;
#if !defined(TC_IMPL_TC_CORBA_EnumDef_0)
#define TC_IMPL_TC_CORBA_EnumDef_0 'i'
#define TC_IMPL_TC_CORBA_EnumDef_1 'n'
#define TC_IMPL_TC_CORBA_EnumDef_2 't'
#define TC_IMPL_TC_CORBA_EnumDef_3 'e'
#define TC_IMPL_TC_CORBA_EnumDef_4 'r'
#define TC_IMPL_TC_CORBA_EnumDef_5 'f'
#define TC_IMPL_TC_CORBA_EnumDef_6 'a'
#define TC_IMPL_TC_CORBA_EnumDef_7 'c'
#define TC_IMPL_TC_CORBA_EnumDef_8 'e'
#define TC_IMPL_TC_CORBA_EnumDef_9 '_'
#define TC_IMPL_TC_CORBA_EnumDef_10 'r'
#define TC_IMPL_TC_CORBA_EnumDef_11 'e'
#define TC_IMPL_TC_CORBA_EnumDef_12 'p'
#define TC_IMPL_TC_CORBA_EnumDef_13 'o'
#define TC_IMPL_TC_CORBA_EnumDef_14 's'
#define TC_IMPL_TC_CORBA_EnumDef_15 'i'
#define TC_IMPL_TC_CORBA_EnumDef_16 't'
#define TC_IMPL_TC_CORBA_EnumDef_17 'o'
#define TC_IMPL_TC_CORBA_EnumDef_18 'r'
#define TC_IMPL_TC_CORBA_EnumDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_EnumDef_struct;
#define TC_CORBA_EnumDef ((CORBA_TypeCode)&TC_CORBA_EnumDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_AliasDef) && !defined(_CORBA_AliasDef_defined)
#define ORBIT_DECL_CORBA_AliasDef 1
#define _CORBA_AliasDef_defined 1
#define CORBA_AliasDef__free CORBA_Object__free
typedef CORBA_Object CORBA_AliasDef;
extern CORBA_unsigned_long CORBA_AliasDef__classid;
#if !defined(TC_IMPL_TC_CORBA_AliasDef_0)
#define TC_IMPL_TC_CORBA_AliasDef_0 'i'
#define TC_IMPL_TC_CORBA_AliasDef_1 'n'
#define TC_IMPL_TC_CORBA_AliasDef_2 't'
#define TC_IMPL_TC_CORBA_AliasDef_3 'e'
#define TC_IMPL_TC_CORBA_AliasDef_4 'r'
#define TC_IMPL_TC_CORBA_AliasDef_5 'f'
#define TC_IMPL_TC_CORBA_AliasDef_6 'a'
#define TC_IMPL_TC_CORBA_AliasDef_7 'c'
#define TC_IMPL_TC_CORBA_AliasDef_8 'e'
#define TC_IMPL_TC_CORBA_AliasDef_9 '_'
#define TC_IMPL_TC_CORBA_AliasDef_10 'r'
#define TC_IMPL_TC_CORBA_AliasDef_11 'e'
#define TC_IMPL_TC_CORBA_AliasDef_12 'p'
#define TC_IMPL_TC_CORBA_AliasDef_13 'o'
#define TC_IMPL_TC_CORBA_AliasDef_14 's'
#define TC_IMPL_TC_CORBA_AliasDef_15 'i'
#define TC_IMPL_TC_CORBA_AliasDef_16 't'
#define TC_IMPL_TC_CORBA_AliasDef_17 'o'
#define TC_IMPL_TC_CORBA_AliasDef_18 'r'
#define TC_IMPL_TC_CORBA_AliasDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AliasDef_struct;
#define TC_CORBA_AliasDef ((CORBA_TypeCode)&TC_CORBA_AliasDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_InterfaceDef) && !defined(_CORBA_InterfaceDef_defined)
#define ORBIT_DECL_CORBA_InterfaceDef 1
#define _CORBA_InterfaceDef_defined 1
#define CORBA_InterfaceDef__free CORBA_Object__free
typedef CORBA_Object CORBA_InterfaceDef;
extern CORBA_unsigned_long CORBA_InterfaceDef__classid;
#if !defined(TC_IMPL_TC_CORBA_InterfaceDef_0)
#define TC_IMPL_TC_CORBA_InterfaceDef_0 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_1 'n'
#define TC_IMPL_TC_CORBA_InterfaceDef_2 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_3 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_4 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_5 'f'
#define TC_IMPL_TC_CORBA_InterfaceDef_6 'a'
#define TC_IMPL_TC_CORBA_InterfaceDef_7 'c'
#define TC_IMPL_TC_CORBA_InterfaceDef_8 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_9 '_'
#define TC_IMPL_TC_CORBA_InterfaceDef_10 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_11 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_12 'p'
#define TC_IMPL_TC_CORBA_InterfaceDef_13 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_14 's'
#define TC_IMPL_TC_CORBA_InterfaceDef_15 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_16 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_17 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_18 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_InterfaceDef_struct;
#define TC_CORBA_InterfaceDef ((CORBA_TypeCode)&TC_CORBA_InterfaceDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ExceptionDef) && !defined(_CORBA_ExceptionDef_defined)
#define ORBIT_DECL_CORBA_ExceptionDef 1
#define _CORBA_ExceptionDef_defined 1
#define CORBA_ExceptionDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ExceptionDef;
extern CORBA_unsigned_long CORBA_ExceptionDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ExceptionDef_0)
#define TC_IMPL_TC_CORBA_ExceptionDef_0 'i'
#define TC_IMPL_TC_CORBA_ExceptionDef_1 'n'
#define TC_IMPL_TC_CORBA_ExceptionDef_2 't'
#define TC_IMPL_TC_CORBA_ExceptionDef_3 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_4 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_5 'f'
#define TC_IMPL_TC_CORBA_ExceptionDef_6 'a'
#define TC_IMPL_TC_CORBA_ExceptionDef_7 'c'
#define TC_IMPL_TC_CORBA_ExceptionDef_8 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_9 '_'
#define TC_IMPL_TC_CORBA_ExceptionDef_10 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_11 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_12 'p'
#define TC_IMPL_TC_CORBA_ExceptionDef_13 'o'
#define TC_IMPL_TC_CORBA_ExceptionDef_14 's'
#define TC_IMPL_TC_CORBA_ExceptionDef_15 'i'
#define TC_IMPL_TC_CORBA_ExceptionDef_16 't'
#define TC_IMPL_TC_CORBA_ExceptionDef_17 'o'
#define TC_IMPL_TC_CORBA_ExceptionDef_18 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ExceptionDef_struct;
#define TC_CORBA_ExceptionDef ((CORBA_TypeCode)&TC_CORBA_ExceptionDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_InterfaceDef) && !defined(_CORBA_sequence_CORBA_InterfaceDef_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_InterfaceDef 1
#define _CORBA_sequence_CORBA_InterfaceDef_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_InterfaceDef_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_InterfaceDef* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_InterfaceDef;
CORBA_InterfaceDef *CORBA_sequence_CORBA_InterfaceDef_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_InterfaceDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_InterfaceDef_struct;
#define TC_CORBA_sequence_CORBA_InterfaceDef ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_InterfaceDef_struct)
#endif
extern CORBA_sequence_CORBA_InterfaceDef* CORBA_sequence_CORBA_InterfaceDef__alloc(void);
extern gpointer CORBA_sequence_CORBA_InterfaceDef__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_InterfaceDefSeq_defined)
#define _CORBA_InterfaceDefSeq_defined 1
typedef CORBA_sequence_CORBA_InterfaceDef CORBA_InterfaceDefSeq;
#if !defined(TC_IMPL_TC_CORBA_InterfaceDefSeq_0)
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_0 'i'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_1 'n'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_2 't'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_3 'e'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_4 'r'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_5 'f'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_6 'a'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_7 'c'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_8 'e'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_9 '_'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_10 'r'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_11 'e'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_12 'p'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_13 'o'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_14 's'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_15 'i'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_16 't'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_17 'o'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_18 'r'
#define TC_IMPL_TC_CORBA_InterfaceDefSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_InterfaceDefSeq_struct;
#define TC_CORBA_InterfaceDefSeq ((CORBA_TypeCode)&TC_CORBA_InterfaceDefSeq_struct)
#endif
extern CORBA_InterfaceDefSeq* CORBA_InterfaceDefSeq__alloc(void);
extern gpointer CORBA_InterfaceDefSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Contained) && !defined(_CORBA_sequence_CORBA_Contained_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_Contained 1
#define _CORBA_sequence_CORBA_Contained_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Contained_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Contained* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Contained;
CORBA_Contained *CORBA_sequence_CORBA_Contained_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Contained_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Contained_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Contained_struct;
#define TC_CORBA_sequence_CORBA_Contained ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Contained_struct)
#endif
extern CORBA_sequence_CORBA_Contained* CORBA_sequence_CORBA_Contained__alloc(void);
extern gpointer CORBA_sequence_CORBA_Contained__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_ContainedSeq_defined)
#define _CORBA_ContainedSeq_defined 1
typedef CORBA_sequence_CORBA_Contained CORBA_ContainedSeq;
#if !defined(TC_IMPL_TC_CORBA_ContainedSeq_0)
#define TC_IMPL_TC_CORBA_ContainedSeq_0 'i'
#define TC_IMPL_TC_CORBA_ContainedSeq_1 'n'
#define TC_IMPL_TC_CORBA_ContainedSeq_2 't'
#define TC_IMPL_TC_CORBA_ContainedSeq_3 'e'
#define TC_IMPL_TC_CORBA_ContainedSeq_4 'r'
#define TC_IMPL_TC_CORBA_ContainedSeq_5 'f'
#define TC_IMPL_TC_CORBA_ContainedSeq_6 'a'
#define TC_IMPL_TC_CORBA_ContainedSeq_7 'c'
#define TC_IMPL_TC_CORBA_ContainedSeq_8 'e'
#define TC_IMPL_TC_CORBA_ContainedSeq_9 '_'
#define TC_IMPL_TC_CORBA_ContainedSeq_10 'r'
#define TC_IMPL_TC_CORBA_ContainedSeq_11 'e'
#define TC_IMPL_TC_CORBA_ContainedSeq_12 'p'
#define TC_IMPL_TC_CORBA_ContainedSeq_13 'o'
#define TC_IMPL_TC_CORBA_ContainedSeq_14 's'
#define TC_IMPL_TC_CORBA_ContainedSeq_15 'i'
#define TC_IMPL_TC_CORBA_ContainedSeq_16 't'
#define TC_IMPL_TC_CORBA_ContainedSeq_17 'o'
#define TC_IMPL_TC_CORBA_ContainedSeq_18 'r'
#define TC_IMPL_TC_CORBA_ContainedSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ContainedSeq_struct;
#define TC_CORBA_ContainedSeq ((CORBA_TypeCode)&TC_CORBA_ContainedSeq_struct)
#endif
extern CORBA_ContainedSeq* CORBA_ContainedSeq__alloc(void);
extern gpointer CORBA_ContainedSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_StructMember_defined)
#define _CORBA_StructMember_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_TypeCode type;
CORBA_IDLType type_def;
} CORBA_StructMember;

#if !defined(TC_IMPL_TC_CORBA_StructMember_0)
#define TC_IMPL_TC_CORBA_StructMember_0 'i'
#define TC_IMPL_TC_CORBA_StructMember_1 'n'
#define TC_IMPL_TC_CORBA_StructMember_2 't'
#define TC_IMPL_TC_CORBA_StructMember_3 'e'
#define TC_IMPL_TC_CORBA_StructMember_4 'r'
#define TC_IMPL_TC_CORBA_StructMember_5 'f'
#define TC_IMPL_TC_CORBA_StructMember_6 'a'
#define TC_IMPL_TC_CORBA_StructMember_7 'c'
#define TC_IMPL_TC_CORBA_StructMember_8 'e'
#define TC_IMPL_TC_CORBA_StructMember_9 '_'
#define TC_IMPL_TC_CORBA_StructMember_10 'r'
#define TC_IMPL_TC_CORBA_StructMember_11 'e'
#define TC_IMPL_TC_CORBA_StructMember_12 'p'
#define TC_IMPL_TC_CORBA_StructMember_13 'o'
#define TC_IMPL_TC_CORBA_StructMember_14 's'
#define TC_IMPL_TC_CORBA_StructMember_15 'i'
#define TC_IMPL_TC_CORBA_StructMember_16 't'
#define TC_IMPL_TC_CORBA_StructMember_17 'o'
#define TC_IMPL_TC_CORBA_StructMember_18 'r'
#define TC_IMPL_TC_CORBA_StructMember_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StructMember_struct;
#define TC_CORBA_StructMember ((CORBA_TypeCode)&TC_CORBA_StructMember_struct)
#endif
extern CORBA_StructMember* CORBA_StructMember__alloc(void);
extern gpointer CORBA_StructMember__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_StructMember) && !defined(_CORBA_sequence_CORBA_StructMember_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_StructMember 1
#define _CORBA_sequence_CORBA_StructMember_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_StructMember_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_StructMember* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_StructMember;
CORBA_StructMember *CORBA_sequence_CORBA_StructMember_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_StructMember_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_StructMember_struct;
#define TC_CORBA_sequence_CORBA_StructMember ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_StructMember_struct)
#endif
extern CORBA_sequence_CORBA_StructMember* CORBA_sequence_CORBA_StructMember__alloc(void);
extern gpointer CORBA_sequence_CORBA_StructMember__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_StructMemberSeq_defined)
#define _CORBA_StructMemberSeq_defined 1
typedef CORBA_sequence_CORBA_StructMember CORBA_StructMemberSeq;
#if !defined(TC_IMPL_TC_CORBA_StructMemberSeq_0)
#define TC_IMPL_TC_CORBA_StructMemberSeq_0 'i'
#define TC_IMPL_TC_CORBA_StructMemberSeq_1 'n'
#define TC_IMPL_TC_CORBA_StructMemberSeq_2 't'
#define TC_IMPL_TC_CORBA_StructMemberSeq_3 'e'
#define TC_IMPL_TC_CORBA_StructMemberSeq_4 'r'
#define TC_IMPL_TC_CORBA_StructMemberSeq_5 'f'
#define TC_IMPL_TC_CORBA_StructMemberSeq_6 'a'
#define TC_IMPL_TC_CORBA_StructMemberSeq_7 'c'
#define TC_IMPL_TC_CORBA_StructMemberSeq_8 'e'
#define TC_IMPL_TC_CORBA_StructMemberSeq_9 '_'
#define TC_IMPL_TC_CORBA_StructMemberSeq_10 'r'
#define TC_IMPL_TC_CORBA_StructMemberSeq_11 'e'
#define TC_IMPL_TC_CORBA_StructMemberSeq_12 'p'
#define TC_IMPL_TC_CORBA_StructMemberSeq_13 'o'
#define TC_IMPL_TC_CORBA_StructMemberSeq_14 's'
#define TC_IMPL_TC_CORBA_StructMemberSeq_15 'i'
#define TC_IMPL_TC_CORBA_StructMemberSeq_16 't'
#define TC_IMPL_TC_CORBA_StructMemberSeq_17 'o'
#define TC_IMPL_TC_CORBA_StructMemberSeq_18 'r'
#define TC_IMPL_TC_CORBA_StructMemberSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StructMemberSeq_struct;
#define TC_CORBA_StructMemberSeq ((CORBA_TypeCode)&TC_CORBA_StructMemberSeq_struct)
#endif
extern CORBA_StructMemberSeq* CORBA_StructMemberSeq__alloc(void);
extern gpointer CORBA_StructMemberSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_UnionMember_defined)
#define _CORBA_UnionMember_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_any label;
CORBA_TypeCode type;
CORBA_IDLType type_def;
} CORBA_UnionMember;

#if !defined(TC_IMPL_TC_CORBA_UnionMember_0)
#define TC_IMPL_TC_CORBA_UnionMember_0 'i'
#define TC_IMPL_TC_CORBA_UnionMember_1 'n'
#define TC_IMPL_TC_CORBA_UnionMember_2 't'
#define TC_IMPL_TC_CORBA_UnionMember_3 'e'
#define TC_IMPL_TC_CORBA_UnionMember_4 'r'
#define TC_IMPL_TC_CORBA_UnionMember_5 'f'
#define TC_IMPL_TC_CORBA_UnionMember_6 'a'
#define TC_IMPL_TC_CORBA_UnionMember_7 'c'
#define TC_IMPL_TC_CORBA_UnionMember_8 'e'
#define TC_IMPL_TC_CORBA_UnionMember_9 '_'
#define TC_IMPL_TC_CORBA_UnionMember_10 'r'
#define TC_IMPL_TC_CORBA_UnionMember_11 'e'
#define TC_IMPL_TC_CORBA_UnionMember_12 'p'
#define TC_IMPL_TC_CORBA_UnionMember_13 'o'
#define TC_IMPL_TC_CORBA_UnionMember_14 's'
#define TC_IMPL_TC_CORBA_UnionMember_15 'i'
#define TC_IMPL_TC_CORBA_UnionMember_16 't'
#define TC_IMPL_TC_CORBA_UnionMember_17 'o'
#define TC_IMPL_TC_CORBA_UnionMember_18 'r'
#define TC_IMPL_TC_CORBA_UnionMember_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_UnionMember_struct;
#define TC_CORBA_UnionMember ((CORBA_TypeCode)&TC_CORBA_UnionMember_struct)
#endif
extern CORBA_UnionMember* CORBA_UnionMember__alloc(void);
extern gpointer CORBA_UnionMember__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_UnionMember) && !defined(_CORBA_sequence_CORBA_UnionMember_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_UnionMember 1
#define _CORBA_sequence_CORBA_UnionMember_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_UnionMember_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_UnionMember* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_UnionMember;
CORBA_UnionMember *CORBA_sequence_CORBA_UnionMember_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_UnionMember_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_UnionMember_struct;
#define TC_CORBA_sequence_CORBA_UnionMember ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_UnionMember_struct)
#endif
extern CORBA_sequence_CORBA_UnionMember* CORBA_sequence_CORBA_UnionMember__alloc(void);
extern gpointer CORBA_sequence_CORBA_UnionMember__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_UnionMemberSeq_defined)
#define _CORBA_UnionMemberSeq_defined 1
typedef CORBA_sequence_CORBA_UnionMember CORBA_UnionMemberSeq;
#if !defined(TC_IMPL_TC_CORBA_UnionMemberSeq_0)
#define TC_IMPL_TC_CORBA_UnionMemberSeq_0 'i'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_1 'n'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_2 't'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_3 'e'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_4 'r'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_5 'f'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_6 'a'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_7 'c'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_8 'e'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_9 '_'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_10 'r'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_11 'e'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_12 'p'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_13 'o'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_14 's'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_15 'i'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_16 't'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_17 'o'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_18 'r'
#define TC_IMPL_TC_CORBA_UnionMemberSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_UnionMemberSeq_struct;
#define TC_CORBA_UnionMemberSeq ((CORBA_TypeCode)&TC_CORBA_UnionMemberSeq_struct)
#endif
extern CORBA_UnionMemberSeq* CORBA_UnionMemberSeq__alloc(void);
extern gpointer CORBA_UnionMemberSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Identifier) && !defined(_CORBA_sequence_CORBA_Identifier_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_Identifier 1
#define _CORBA_sequence_CORBA_Identifier_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Identifier_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Identifier* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Identifier;
CORBA_Identifier *CORBA_sequence_CORBA_Identifier_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Identifier_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Identifier_struct;
#define TC_CORBA_sequence_CORBA_Identifier ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Identifier_struct)
#endif
extern CORBA_sequence_CORBA_Identifier* CORBA_sequence_CORBA_Identifier__alloc(void);
extern gpointer CORBA_sequence_CORBA_Identifier__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_EnumMemberSeq_defined)
#define _CORBA_EnumMemberSeq_defined 1
typedef CORBA_sequence_CORBA_Identifier CORBA_EnumMemberSeq;
#if !defined(TC_IMPL_TC_CORBA_EnumMemberSeq_0)
#define TC_IMPL_TC_CORBA_EnumMemberSeq_0 'i'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_1 'n'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_2 't'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_3 'e'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_4 'r'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_5 'f'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_6 'a'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_7 'c'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_8 'e'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_9 '_'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_10 'r'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_11 'e'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_12 'p'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_13 'o'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_14 's'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_15 'i'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_16 't'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_17 'o'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_18 'r'
#define TC_IMPL_TC_CORBA_EnumMemberSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_EnumMemberSeq_struct;
#define TC_CORBA_EnumMemberSeq ((CORBA_TypeCode)&TC_CORBA_EnumMemberSeq_struct)
#endif
extern CORBA_EnumMemberSeq* CORBA_EnumMemberSeq__alloc(void);
extern gpointer CORBA_EnumMemberSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_Container) && !defined(_CORBA_Container_defined)
#define ORBIT_DECL_CORBA_Container 1
#define _CORBA_Container_defined 1
#define CORBA_Container__free CORBA_Object__free
typedef CORBA_Object CORBA_Container;
extern CORBA_unsigned_long CORBA_Container__classid;
#if !defined(TC_IMPL_TC_CORBA_Container_0)
#define TC_IMPL_TC_CORBA_Container_0 'i'
#define TC_IMPL_TC_CORBA_Container_1 'n'
#define TC_IMPL_TC_CORBA_Container_2 't'
#define TC_IMPL_TC_CORBA_Container_3 'e'
#define TC_IMPL_TC_CORBA_Container_4 'r'
#define TC_IMPL_TC_CORBA_Container_5 'f'
#define TC_IMPL_TC_CORBA_Container_6 'a'
#define TC_IMPL_TC_CORBA_Container_7 'c'
#define TC_IMPL_TC_CORBA_Container_8 'e'
#define TC_IMPL_TC_CORBA_Container_9 '_'
#define TC_IMPL_TC_CORBA_Container_10 'r'
#define TC_IMPL_TC_CORBA_Container_11 'e'
#define TC_IMPL_TC_CORBA_Container_12 'p'
#define TC_IMPL_TC_CORBA_Container_13 'o'
#define TC_IMPL_TC_CORBA_Container_14 's'
#define TC_IMPL_TC_CORBA_Container_15 'i'
#define TC_IMPL_TC_CORBA_Container_16 't'
#define TC_IMPL_TC_CORBA_Container_17 'o'
#define TC_IMPL_TC_CORBA_Container_18 'r'
#define TC_IMPL_TC_CORBA_Container_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Container_struct;
#define TC_CORBA_Container ((CORBA_TypeCode)&TC_CORBA_Container_struct)
#endif
#endif
#if !defined(_CORBA_Container_Description_defined)
#define _CORBA_Container_Description_defined 1
typedef struct {
CORBA_Contained contained_object;
CORBA_DefinitionKind kind;
CORBA_any value;
} CORBA_Container_Description;

#if !defined(TC_IMPL_TC_CORBA_Container_Description_0)
#define TC_IMPL_TC_CORBA_Container_Description_0 'i'
#define TC_IMPL_TC_CORBA_Container_Description_1 'n'
#define TC_IMPL_TC_CORBA_Container_Description_2 't'
#define TC_IMPL_TC_CORBA_Container_Description_3 'e'
#define TC_IMPL_TC_CORBA_Container_Description_4 'r'
#define TC_IMPL_TC_CORBA_Container_Description_5 'f'
#define TC_IMPL_TC_CORBA_Container_Description_6 'a'
#define TC_IMPL_TC_CORBA_Container_Description_7 'c'
#define TC_IMPL_TC_CORBA_Container_Description_8 'e'
#define TC_IMPL_TC_CORBA_Container_Description_9 '_'
#define TC_IMPL_TC_CORBA_Container_Description_10 'r'
#define TC_IMPL_TC_CORBA_Container_Description_11 'e'
#define TC_IMPL_TC_CORBA_Container_Description_12 'p'
#define TC_IMPL_TC_CORBA_Container_Description_13 'o'
#define TC_IMPL_TC_CORBA_Container_Description_14 's'
#define TC_IMPL_TC_CORBA_Container_Description_15 'i'
#define TC_IMPL_TC_CORBA_Container_Description_16 't'
#define TC_IMPL_TC_CORBA_Container_Description_17 'o'
#define TC_IMPL_TC_CORBA_Container_Description_18 'r'
#define TC_IMPL_TC_CORBA_Container_Description_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Container_Description_struct;
#define TC_CORBA_Container_Description ((CORBA_TypeCode)&TC_CORBA_Container_Description_struct)
#endif
extern CORBA_Container_Description* CORBA_Container_Description__alloc(void);
extern gpointer CORBA_Container_Description__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Container_Description) && !defined(_CORBA_sequence_CORBA_Container_Description_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_Container_Description 1
#define _CORBA_sequence_CORBA_Container_Description_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Container_Description_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Container_Description* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Container_Description;
CORBA_Container_Description *CORBA_sequence_CORBA_Container_Description_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Container_Description_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Container_Description_struct;
#define TC_CORBA_sequence_CORBA_Container_Description ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Container_Description_struct)
#endif
extern CORBA_sequence_CORBA_Container_Description* CORBA_sequence_CORBA_Container_Description__alloc(void);
extern gpointer CORBA_sequence_CORBA_Container_Description__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_Container_DescriptionSeq_defined)
#define _CORBA_Container_DescriptionSeq_defined 1
typedef CORBA_sequence_CORBA_Container_Description CORBA_Container_DescriptionSeq;
#if !defined(TC_IMPL_TC_CORBA_Container_DescriptionSeq_0)
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_0 'i'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_1 'n'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_2 't'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_3 'e'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_4 'r'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_5 'f'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_6 'a'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_7 'c'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_8 'e'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_9 '_'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_10 'r'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_11 'e'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_12 'p'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_13 'o'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_14 's'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_15 'i'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_16 't'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_17 'o'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_18 'r'
#define TC_IMPL_TC_CORBA_Container_DescriptionSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Container_DescriptionSeq_struct;
#define TC_CORBA_Container_DescriptionSeq ((CORBA_TypeCode)&TC_CORBA_Container_DescriptionSeq_struct)
#endif
extern CORBA_Container_DescriptionSeq* CORBA_Container_DescriptionSeq__alloc(void);
extern gpointer CORBA_Container_DescriptionSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_IDLType) && !defined(_CORBA_IDLType_defined)
#define ORBIT_DECL_CORBA_IDLType 1
#define _CORBA_IDLType_defined 1
#define CORBA_IDLType__free CORBA_Object__free
typedef CORBA_Object CORBA_IDLType;
extern CORBA_unsigned_long CORBA_IDLType__classid;
#if !defined(TC_IMPL_TC_CORBA_IDLType_0)
#define TC_IMPL_TC_CORBA_IDLType_0 'i'
#define TC_IMPL_TC_CORBA_IDLType_1 'n'
#define TC_IMPL_TC_CORBA_IDLType_2 't'
#define TC_IMPL_TC_CORBA_IDLType_3 'e'
#define TC_IMPL_TC_CORBA_IDLType_4 'r'
#define TC_IMPL_TC_CORBA_IDLType_5 'f'
#define TC_IMPL_TC_CORBA_IDLType_6 'a'
#define TC_IMPL_TC_CORBA_IDLType_7 'c'
#define TC_IMPL_TC_CORBA_IDLType_8 'e'
#define TC_IMPL_TC_CORBA_IDLType_9 '_'
#define TC_IMPL_TC_CORBA_IDLType_10 'r'
#define TC_IMPL_TC_CORBA_IDLType_11 'e'
#define TC_IMPL_TC_CORBA_IDLType_12 'p'
#define TC_IMPL_TC_CORBA_IDLType_13 'o'
#define TC_IMPL_TC_CORBA_IDLType_14 's'
#define TC_IMPL_TC_CORBA_IDLType_15 'i'
#define TC_IMPL_TC_CORBA_IDLType_16 't'
#define TC_IMPL_TC_CORBA_IDLType_17 'o'
#define TC_IMPL_TC_CORBA_IDLType_18 'r'
#define TC_IMPL_TC_CORBA_IDLType_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_IDLType_struct;
#define TC_CORBA_IDLType ((CORBA_TypeCode)&TC_CORBA_IDLType_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_PrimitiveDef) && !defined(_CORBA_PrimitiveDef_defined)
#define ORBIT_DECL_CORBA_PrimitiveDef 1
#define _CORBA_PrimitiveDef_defined 1
#define CORBA_PrimitiveDef__free CORBA_Object__free
typedef CORBA_Object CORBA_PrimitiveDef;
extern CORBA_unsigned_long CORBA_PrimitiveDef__classid;
#if !defined(TC_IMPL_TC_CORBA_PrimitiveDef_0)
#define TC_IMPL_TC_CORBA_PrimitiveDef_0 'i'
#define TC_IMPL_TC_CORBA_PrimitiveDef_1 'n'
#define TC_IMPL_TC_CORBA_PrimitiveDef_2 't'
#define TC_IMPL_TC_CORBA_PrimitiveDef_3 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_4 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_5 'f'
#define TC_IMPL_TC_CORBA_PrimitiveDef_6 'a'
#define TC_IMPL_TC_CORBA_PrimitiveDef_7 'c'
#define TC_IMPL_TC_CORBA_PrimitiveDef_8 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_9 '_'
#define TC_IMPL_TC_CORBA_PrimitiveDef_10 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_11 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_12 'p'
#define TC_IMPL_TC_CORBA_PrimitiveDef_13 'o'
#define TC_IMPL_TC_CORBA_PrimitiveDef_14 's'
#define TC_IMPL_TC_CORBA_PrimitiveDef_15 'i'
#define TC_IMPL_TC_CORBA_PrimitiveDef_16 't'
#define TC_IMPL_TC_CORBA_PrimitiveDef_17 'o'
#define TC_IMPL_TC_CORBA_PrimitiveDef_18 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_PrimitiveDef_struct;
#define TC_CORBA_PrimitiveDef ((CORBA_TypeCode)&TC_CORBA_PrimitiveDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_StringDef) && !defined(_CORBA_StringDef_defined)
#define ORBIT_DECL_CORBA_StringDef 1
#define _CORBA_StringDef_defined 1
#define CORBA_StringDef__free CORBA_Object__free
typedef CORBA_Object CORBA_StringDef;
extern CORBA_unsigned_long CORBA_StringDef__classid;
#if !defined(TC_IMPL_TC_CORBA_StringDef_0)
#define TC_IMPL_TC_CORBA_StringDef_0 'i'
#define TC_IMPL_TC_CORBA_StringDef_1 'n'
#define TC_IMPL_TC_CORBA_StringDef_2 't'
#define TC_IMPL_TC_CORBA_StringDef_3 'e'
#define TC_IMPL_TC_CORBA_StringDef_4 'r'
#define TC_IMPL_TC_CORBA_StringDef_5 'f'
#define TC_IMPL_TC_CORBA_StringDef_6 'a'
#define TC_IMPL_TC_CORBA_StringDef_7 'c'
#define TC_IMPL_TC_CORBA_StringDef_8 'e'
#define TC_IMPL_TC_CORBA_StringDef_9 '_'
#define TC_IMPL_TC_CORBA_StringDef_10 'r'
#define TC_IMPL_TC_CORBA_StringDef_11 'e'
#define TC_IMPL_TC_CORBA_StringDef_12 'p'
#define TC_IMPL_TC_CORBA_StringDef_13 'o'
#define TC_IMPL_TC_CORBA_StringDef_14 's'
#define TC_IMPL_TC_CORBA_StringDef_15 'i'
#define TC_IMPL_TC_CORBA_StringDef_16 't'
#define TC_IMPL_TC_CORBA_StringDef_17 'o'
#define TC_IMPL_TC_CORBA_StringDef_18 'r'
#define TC_IMPL_TC_CORBA_StringDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StringDef_struct;
#define TC_CORBA_StringDef ((CORBA_TypeCode)&TC_CORBA_StringDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_WstringDef) && !defined(_CORBA_WstringDef_defined)
#define ORBIT_DECL_CORBA_WstringDef 1
#define _CORBA_WstringDef_defined 1
#define CORBA_WstringDef__free CORBA_Object__free
typedef CORBA_Object CORBA_WstringDef;
extern CORBA_unsigned_long CORBA_WstringDef__classid;
#if !defined(TC_IMPL_TC_CORBA_WstringDef_0)
#define TC_IMPL_TC_CORBA_WstringDef_0 'i'
#define TC_IMPL_TC_CORBA_WstringDef_1 'n'
#define TC_IMPL_TC_CORBA_WstringDef_2 't'
#define TC_IMPL_TC_CORBA_WstringDef_3 'e'
#define TC_IMPL_TC_CORBA_WstringDef_4 'r'
#define TC_IMPL_TC_CORBA_WstringDef_5 'f'
#define TC_IMPL_TC_CORBA_WstringDef_6 'a'
#define TC_IMPL_TC_CORBA_WstringDef_7 'c'
#define TC_IMPL_TC_CORBA_WstringDef_8 'e'
#define TC_IMPL_TC_CORBA_WstringDef_9 '_'
#define TC_IMPL_TC_CORBA_WstringDef_10 'r'
#define TC_IMPL_TC_CORBA_WstringDef_11 'e'
#define TC_IMPL_TC_CORBA_WstringDef_12 'p'
#define TC_IMPL_TC_CORBA_WstringDef_13 'o'
#define TC_IMPL_TC_CORBA_WstringDef_14 's'
#define TC_IMPL_TC_CORBA_WstringDef_15 'i'
#define TC_IMPL_TC_CORBA_WstringDef_16 't'
#define TC_IMPL_TC_CORBA_WstringDef_17 'o'
#define TC_IMPL_TC_CORBA_WstringDef_18 'r'
#define TC_IMPL_TC_CORBA_WstringDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_WstringDef_struct;
#define TC_CORBA_WstringDef ((CORBA_TypeCode)&TC_CORBA_WstringDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_SequenceDef) && !defined(_CORBA_SequenceDef_defined)
#define ORBIT_DECL_CORBA_SequenceDef 1
#define _CORBA_SequenceDef_defined 1
#define CORBA_SequenceDef__free CORBA_Object__free
typedef CORBA_Object CORBA_SequenceDef;
extern CORBA_unsigned_long CORBA_SequenceDef__classid;
#if !defined(TC_IMPL_TC_CORBA_SequenceDef_0)
#define TC_IMPL_TC_CORBA_SequenceDef_0 'i'
#define TC_IMPL_TC_CORBA_SequenceDef_1 'n'
#define TC_IMPL_TC_CORBA_SequenceDef_2 't'
#define TC_IMPL_TC_CORBA_SequenceDef_3 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_4 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_5 'f'
#define TC_IMPL_TC_CORBA_SequenceDef_6 'a'
#define TC_IMPL_TC_CORBA_SequenceDef_7 'c'
#define TC_IMPL_TC_CORBA_SequenceDef_8 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_9 '_'
#define TC_IMPL_TC_CORBA_SequenceDef_10 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_11 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_12 'p'
#define TC_IMPL_TC_CORBA_SequenceDef_13 'o'
#define TC_IMPL_TC_CORBA_SequenceDef_14 's'
#define TC_IMPL_TC_CORBA_SequenceDef_15 'i'
#define TC_IMPL_TC_CORBA_SequenceDef_16 't'
#define TC_IMPL_TC_CORBA_SequenceDef_17 'o'
#define TC_IMPL_TC_CORBA_SequenceDef_18 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_SequenceDef_struct;
#define TC_CORBA_SequenceDef ((CORBA_TypeCode)&TC_CORBA_SequenceDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ArrayDef) && !defined(_CORBA_ArrayDef_defined)
#define ORBIT_DECL_CORBA_ArrayDef 1
#define _CORBA_ArrayDef_defined 1
#define CORBA_ArrayDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ArrayDef;
extern CORBA_unsigned_long CORBA_ArrayDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ArrayDef_0)
#define TC_IMPL_TC_CORBA_ArrayDef_0 'i'
#define TC_IMPL_TC_CORBA_ArrayDef_1 'n'
#define TC_IMPL_TC_CORBA_ArrayDef_2 't'
#define TC_IMPL_TC_CORBA_ArrayDef_3 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_4 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_5 'f'
#define TC_IMPL_TC_CORBA_ArrayDef_6 'a'
#define TC_IMPL_TC_CORBA_ArrayDef_7 'c'
#define TC_IMPL_TC_CORBA_ArrayDef_8 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_9 '_'
#define TC_IMPL_TC_CORBA_ArrayDef_10 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_11 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_12 'p'
#define TC_IMPL_TC_CORBA_ArrayDef_13 'o'
#define TC_IMPL_TC_CORBA_ArrayDef_14 's'
#define TC_IMPL_TC_CORBA_ArrayDef_15 'i'
#define TC_IMPL_TC_CORBA_ArrayDef_16 't'
#define TC_IMPL_TC_CORBA_ArrayDef_17 'o'
#define TC_IMPL_TC_CORBA_ArrayDef_18 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ArrayDef_struct;
#define TC_CORBA_ArrayDef ((CORBA_TypeCode)&TC_CORBA_ArrayDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_FixedDef) && !defined(_CORBA_FixedDef_defined)
#define ORBIT_DECL_CORBA_FixedDef 1
#define _CORBA_FixedDef_defined 1
#define CORBA_FixedDef__free CORBA_Object__free
typedef CORBA_Object CORBA_FixedDef;
extern CORBA_unsigned_long CORBA_FixedDef__classid;
#if !defined(TC_IMPL_TC_CORBA_FixedDef_0)
#define TC_IMPL_TC_CORBA_FixedDef_0 'i'
#define TC_IMPL_TC_CORBA_FixedDef_1 'n'
#define TC_IMPL_TC_CORBA_FixedDef_2 't'
#define TC_IMPL_TC_CORBA_FixedDef_3 'e'
#define TC_IMPL_TC_CORBA_FixedDef_4 'r'
#define TC_IMPL_TC_CORBA_FixedDef_5 'f'
#define TC_IMPL_TC_CORBA_FixedDef_6 'a'
#define TC_IMPL_TC_CORBA_FixedDef_7 'c'
#define TC_IMPL_TC_CORBA_FixedDef_8 'e'
#define TC_IMPL_TC_CORBA_FixedDef_9 '_'
#define TC_IMPL_TC_CORBA_FixedDef_10 'r'
#define TC_IMPL_TC_CORBA_FixedDef_11 'e'
#define TC_IMPL_TC_CORBA_FixedDef_12 'p'
#define TC_IMPL_TC_CORBA_FixedDef_13 'o'
#define TC_IMPL_TC_CORBA_FixedDef_14 's'
#define TC_IMPL_TC_CORBA_FixedDef_15 'i'
#define TC_IMPL_TC_CORBA_FixedDef_16 't'
#define TC_IMPL_TC_CORBA_FixedDef_17 'o'
#define TC_IMPL_TC_CORBA_FixedDef_18 'r'
#define TC_IMPL_TC_CORBA_FixedDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_FixedDef_struct;
#define TC_CORBA_FixedDef ((CORBA_TypeCode)&TC_CORBA_FixedDef_struct)
#endif
#endif
#if !defined(_CORBA_PrimitiveKind_defined)
#define _CORBA_PrimitiveKind_defined 1
typedef enum {
  CORBA_pk_null,
  CORBA_pk_void,
  CORBA_pk_short,
  CORBA_pk_long,
  CORBA_pk_ushort,
  CORBA_pk_ulong,
  CORBA_pk_float,
  CORBA_pk_double,
  CORBA_pk_boolean,
  CORBA_pk_char,
  CORBA_pk_octet,
  CORBA_pk_any,
  CORBA_pk_TypeCode,
  CORBA_pk_Principal,
  CORBA_pk_string,
  CORBA_pk_objref,
  CORBA_pk_longlong,
  CORBA_pk_ulonglong,
  CORBA_pk_longdouble,
  CORBA_pk_wchar,
  CORBA_pk_wstring
} CORBA_PrimitiveKind;
#if !defined(TC_IMPL_TC_CORBA_PrimitiveKind_0)
#define TC_IMPL_TC_CORBA_PrimitiveKind_0 'i'
#define TC_IMPL_TC_CORBA_PrimitiveKind_1 'n'
#define TC_IMPL_TC_CORBA_PrimitiveKind_2 't'
#define TC_IMPL_TC_CORBA_PrimitiveKind_3 'e'
#define TC_IMPL_TC_CORBA_PrimitiveKind_4 'r'
#define TC_IMPL_TC_CORBA_PrimitiveKind_5 'f'
#define TC_IMPL_TC_CORBA_PrimitiveKind_6 'a'
#define TC_IMPL_TC_CORBA_PrimitiveKind_7 'c'
#define TC_IMPL_TC_CORBA_PrimitiveKind_8 'e'
#define TC_IMPL_TC_CORBA_PrimitiveKind_9 '_'
#define TC_IMPL_TC_CORBA_PrimitiveKind_10 'r'
#define TC_IMPL_TC_CORBA_PrimitiveKind_11 'e'
#define TC_IMPL_TC_CORBA_PrimitiveKind_12 'p'
#define TC_IMPL_TC_CORBA_PrimitiveKind_13 'o'
#define TC_IMPL_TC_CORBA_PrimitiveKind_14 's'
#define TC_IMPL_TC_CORBA_PrimitiveKind_15 'i'
#define TC_IMPL_TC_CORBA_PrimitiveKind_16 't'
#define TC_IMPL_TC_CORBA_PrimitiveKind_17 'o'
#define TC_IMPL_TC_CORBA_PrimitiveKind_18 'r'
#define TC_IMPL_TC_CORBA_PrimitiveKind_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_PrimitiveKind_struct;
#define TC_CORBA_PrimitiveKind ((CORBA_TypeCode)&TC_CORBA_PrimitiveKind_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_Repository) && !defined(_CORBA_Repository_defined)
#define ORBIT_DECL_CORBA_Repository 1
#define _CORBA_Repository_defined 1
#define CORBA_Repository__free CORBA_Object__free
typedef CORBA_Object CORBA_Repository;
extern CORBA_unsigned_long CORBA_Repository__classid;
#if !defined(TC_IMPL_TC_CORBA_Repository_0)
#define TC_IMPL_TC_CORBA_Repository_0 'i'
#define TC_IMPL_TC_CORBA_Repository_1 'n'
#define TC_IMPL_TC_CORBA_Repository_2 't'
#define TC_IMPL_TC_CORBA_Repository_3 'e'
#define TC_IMPL_TC_CORBA_Repository_4 'r'
#define TC_IMPL_TC_CORBA_Repository_5 'f'
#define TC_IMPL_TC_CORBA_Repository_6 'a'
#define TC_IMPL_TC_CORBA_Repository_7 'c'
#define TC_IMPL_TC_CORBA_Repository_8 'e'
#define TC_IMPL_TC_CORBA_Repository_9 '_'
#define TC_IMPL_TC_CORBA_Repository_10 'r'
#define TC_IMPL_TC_CORBA_Repository_11 'e'
#define TC_IMPL_TC_CORBA_Repository_12 'p'
#define TC_IMPL_TC_CORBA_Repository_13 'o'
#define TC_IMPL_TC_CORBA_Repository_14 's'
#define TC_IMPL_TC_CORBA_Repository_15 'i'
#define TC_IMPL_TC_CORBA_Repository_16 't'
#define TC_IMPL_TC_CORBA_Repository_17 'o'
#define TC_IMPL_TC_CORBA_Repository_18 'r'
#define TC_IMPL_TC_CORBA_Repository_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_Repository_struct;
#define TC_CORBA_Repository ((CORBA_TypeCode)&TC_CORBA_Repository_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ModuleDef) && !defined(_CORBA_ModuleDef_defined)
#define ORBIT_DECL_CORBA_ModuleDef 1
#define _CORBA_ModuleDef_defined 1
#define CORBA_ModuleDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ModuleDef;
extern CORBA_unsigned_long CORBA_ModuleDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ModuleDef_0)
#define TC_IMPL_TC_CORBA_ModuleDef_0 'i'
#define TC_IMPL_TC_CORBA_ModuleDef_1 'n'
#define TC_IMPL_TC_CORBA_ModuleDef_2 't'
#define TC_IMPL_TC_CORBA_ModuleDef_3 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_4 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_5 'f'
#define TC_IMPL_TC_CORBA_ModuleDef_6 'a'
#define TC_IMPL_TC_CORBA_ModuleDef_7 'c'
#define TC_IMPL_TC_CORBA_ModuleDef_8 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_9 '_'
#define TC_IMPL_TC_CORBA_ModuleDef_10 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_11 'e'
#define TC_IMPL_TC_CORBA_ModuleDef_12 'p'
#define TC_IMPL_TC_CORBA_ModuleDef_13 'o'
#define TC_IMPL_TC_CORBA_ModuleDef_14 's'
#define TC_IMPL_TC_CORBA_ModuleDef_15 'i'
#define TC_IMPL_TC_CORBA_ModuleDef_16 't'
#define TC_IMPL_TC_CORBA_ModuleDef_17 'o'
#define TC_IMPL_TC_CORBA_ModuleDef_18 'r'
#define TC_IMPL_TC_CORBA_ModuleDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ModuleDef_struct;
#define TC_CORBA_ModuleDef ((CORBA_TypeCode)&TC_CORBA_ModuleDef_struct)
#endif
#endif
#if !defined(_CORBA_ModuleDescription_defined)
#define _CORBA_ModuleDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
} CORBA_ModuleDescription;

#if !defined(TC_IMPL_TC_CORBA_ModuleDescription_0)
#define TC_IMPL_TC_CORBA_ModuleDescription_0 'i'
#define TC_IMPL_TC_CORBA_ModuleDescription_1 'n'
#define TC_IMPL_TC_CORBA_ModuleDescription_2 't'
#define TC_IMPL_TC_CORBA_ModuleDescription_3 'e'
#define TC_IMPL_TC_CORBA_ModuleDescription_4 'r'
#define TC_IMPL_TC_CORBA_ModuleDescription_5 'f'
#define TC_IMPL_TC_CORBA_ModuleDescription_6 'a'
#define TC_IMPL_TC_CORBA_ModuleDescription_7 'c'
#define TC_IMPL_TC_CORBA_ModuleDescription_8 'e'
#define TC_IMPL_TC_CORBA_ModuleDescription_9 '_'
#define TC_IMPL_TC_CORBA_ModuleDescription_10 'r'
#define TC_IMPL_TC_CORBA_ModuleDescription_11 'e'
#define TC_IMPL_TC_CORBA_ModuleDescription_12 'p'
#define TC_IMPL_TC_CORBA_ModuleDescription_13 'o'
#define TC_IMPL_TC_CORBA_ModuleDescription_14 's'
#define TC_IMPL_TC_CORBA_ModuleDescription_15 'i'
#define TC_IMPL_TC_CORBA_ModuleDescription_16 't'
#define TC_IMPL_TC_CORBA_ModuleDescription_17 'o'
#define TC_IMPL_TC_CORBA_ModuleDescription_18 'r'
#define TC_IMPL_TC_CORBA_ModuleDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ModuleDescription_struct;
#define TC_CORBA_ModuleDescription ((CORBA_TypeCode)&TC_CORBA_ModuleDescription_struct)
#endif
extern CORBA_ModuleDescription* CORBA_ModuleDescription__alloc(void);
extern gpointer CORBA_ModuleDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_ConstantDef) && !defined(_CORBA_ConstantDef_defined)
#define ORBIT_DECL_CORBA_ConstantDef 1
#define _CORBA_ConstantDef_defined 1
#define CORBA_ConstantDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ConstantDef;
extern CORBA_unsigned_long CORBA_ConstantDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ConstantDef_0)
#define TC_IMPL_TC_CORBA_ConstantDef_0 'i'
#define TC_IMPL_TC_CORBA_ConstantDef_1 'n'
#define TC_IMPL_TC_CORBA_ConstantDef_2 't'
#define TC_IMPL_TC_CORBA_ConstantDef_3 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_4 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_5 'f'
#define TC_IMPL_TC_CORBA_ConstantDef_6 'a'
#define TC_IMPL_TC_CORBA_ConstantDef_7 'c'
#define TC_IMPL_TC_CORBA_ConstantDef_8 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_9 '_'
#define TC_IMPL_TC_CORBA_ConstantDef_10 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_11 'e'
#define TC_IMPL_TC_CORBA_ConstantDef_12 'p'
#define TC_IMPL_TC_CORBA_ConstantDef_13 'o'
#define TC_IMPL_TC_CORBA_ConstantDef_14 's'
#define TC_IMPL_TC_CORBA_ConstantDef_15 'i'
#define TC_IMPL_TC_CORBA_ConstantDef_16 't'
#define TC_IMPL_TC_CORBA_ConstantDef_17 'o'
#define TC_IMPL_TC_CORBA_ConstantDef_18 'r'
#define TC_IMPL_TC_CORBA_ConstantDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ConstantDef_struct;
#define TC_CORBA_ConstantDef ((CORBA_TypeCode)&TC_CORBA_ConstantDef_struct)
#endif
#endif
#if !defined(_CORBA_ConstantDescription_defined)
#define _CORBA_ConstantDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_TypeCode type;
CORBA_any value;
} CORBA_ConstantDescription;

#if !defined(TC_IMPL_TC_CORBA_ConstantDescription_0)
#define TC_IMPL_TC_CORBA_ConstantDescription_0 'i'
#define TC_IMPL_TC_CORBA_ConstantDescription_1 'n'
#define TC_IMPL_TC_CORBA_ConstantDescription_2 't'
#define TC_IMPL_TC_CORBA_ConstantDescription_3 'e'
#define TC_IMPL_TC_CORBA_ConstantDescription_4 'r'
#define TC_IMPL_TC_CORBA_ConstantDescription_5 'f'
#define TC_IMPL_TC_CORBA_ConstantDescription_6 'a'
#define TC_IMPL_TC_CORBA_ConstantDescription_7 'c'
#define TC_IMPL_TC_CORBA_ConstantDescription_8 'e'
#define TC_IMPL_TC_CORBA_ConstantDescription_9 '_'
#define TC_IMPL_TC_CORBA_ConstantDescription_10 'r'
#define TC_IMPL_TC_CORBA_ConstantDescription_11 'e'
#define TC_IMPL_TC_CORBA_ConstantDescription_12 'p'
#define TC_IMPL_TC_CORBA_ConstantDescription_13 'o'
#define TC_IMPL_TC_CORBA_ConstantDescription_14 's'
#define TC_IMPL_TC_CORBA_ConstantDescription_15 'i'
#define TC_IMPL_TC_CORBA_ConstantDescription_16 't'
#define TC_IMPL_TC_CORBA_ConstantDescription_17 'o'
#define TC_IMPL_TC_CORBA_ConstantDescription_18 'r'
#define TC_IMPL_TC_CORBA_ConstantDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ConstantDescription_struct;
#define TC_CORBA_ConstantDescription ((CORBA_TypeCode)&TC_CORBA_ConstantDescription_struct)
#endif
extern CORBA_ConstantDescription* CORBA_ConstantDescription__alloc(void);
extern gpointer CORBA_ConstantDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_TypedefDef) && !defined(_CORBA_TypedefDef_defined)
#define ORBIT_DECL_CORBA_TypedefDef 1
#define _CORBA_TypedefDef_defined 1
#define CORBA_TypedefDef__free CORBA_Object__free
typedef CORBA_Object CORBA_TypedefDef;
extern CORBA_unsigned_long CORBA_TypedefDef__classid;
#if !defined(TC_IMPL_TC_CORBA_TypedefDef_0)
#define TC_IMPL_TC_CORBA_TypedefDef_0 'i'
#define TC_IMPL_TC_CORBA_TypedefDef_1 'n'
#define TC_IMPL_TC_CORBA_TypedefDef_2 't'
#define TC_IMPL_TC_CORBA_TypedefDef_3 'e'
#define TC_IMPL_TC_CORBA_TypedefDef_4 'r'
#define TC_IMPL_TC_CORBA_TypedefDef_5 'f'
#define TC_IMPL_TC_CORBA_TypedefDef_6 'a'
#define TC_IMPL_TC_CORBA_TypedefDef_7 'c'
#define TC_IMPL_TC_CORBA_TypedefDef_8 'e'
#define TC_IMPL_TC_CORBA_TypedefDef_9 '_'
#define TC_IMPL_TC_CORBA_TypedefDef_10 'r'
#define TC_IMPL_TC_CORBA_TypedefDef_11 'e'
#define TC_IMPL_TC_CORBA_TypedefDef_12 'p'
#define TC_IMPL_TC_CORBA_TypedefDef_13 'o'
#define TC_IMPL_TC_CORBA_TypedefDef_14 's'
#define TC_IMPL_TC_CORBA_TypedefDef_15 'i'
#define TC_IMPL_TC_CORBA_TypedefDef_16 't'
#define TC_IMPL_TC_CORBA_TypedefDef_17 'o'
#define TC_IMPL_TC_CORBA_TypedefDef_18 'r'
#define TC_IMPL_TC_CORBA_TypedefDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_TypedefDef_struct;
#define TC_CORBA_TypedefDef ((CORBA_TypeCode)&TC_CORBA_TypedefDef_struct)
#endif
#endif
#if !defined(_CORBA_TypeDescription_defined)
#define _CORBA_TypeDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_TypeCode type;
} CORBA_TypeDescription;

#if !defined(TC_IMPL_TC_CORBA_TypeDescription_0)
#define TC_IMPL_TC_CORBA_TypeDescription_0 'i'
#define TC_IMPL_TC_CORBA_TypeDescription_1 'n'
#define TC_IMPL_TC_CORBA_TypeDescription_2 't'
#define TC_IMPL_TC_CORBA_TypeDescription_3 'e'
#define TC_IMPL_TC_CORBA_TypeDescription_4 'r'
#define TC_IMPL_TC_CORBA_TypeDescription_5 'f'
#define TC_IMPL_TC_CORBA_TypeDescription_6 'a'
#define TC_IMPL_TC_CORBA_TypeDescription_7 'c'
#define TC_IMPL_TC_CORBA_TypeDescription_8 'e'
#define TC_IMPL_TC_CORBA_TypeDescription_9 '_'
#define TC_IMPL_TC_CORBA_TypeDescription_10 'r'
#define TC_IMPL_TC_CORBA_TypeDescription_11 'e'
#define TC_IMPL_TC_CORBA_TypeDescription_12 'p'
#define TC_IMPL_TC_CORBA_TypeDescription_13 'o'
#define TC_IMPL_TC_CORBA_TypeDescription_14 's'
#define TC_IMPL_TC_CORBA_TypeDescription_15 'i'
#define TC_IMPL_TC_CORBA_TypeDescription_16 't'
#define TC_IMPL_TC_CORBA_TypeDescription_17 'o'
#define TC_IMPL_TC_CORBA_TypeDescription_18 'r'
#define TC_IMPL_TC_CORBA_TypeDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_TypeDescription_struct;
#define TC_CORBA_TypeDescription ((CORBA_TypeCode)&TC_CORBA_TypeDescription_struct)
#endif
extern CORBA_TypeDescription* CORBA_TypeDescription__alloc(void);
extern gpointer CORBA_TypeDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_StructDef) && !defined(_CORBA_StructDef_defined)
#define ORBIT_DECL_CORBA_StructDef 1
#define _CORBA_StructDef_defined 1
#define CORBA_StructDef__free CORBA_Object__free
typedef CORBA_Object CORBA_StructDef;
extern CORBA_unsigned_long CORBA_StructDef__classid;
#if !defined(TC_IMPL_TC_CORBA_StructDef_0)
#define TC_IMPL_TC_CORBA_StructDef_0 'i'
#define TC_IMPL_TC_CORBA_StructDef_1 'n'
#define TC_IMPL_TC_CORBA_StructDef_2 't'
#define TC_IMPL_TC_CORBA_StructDef_3 'e'
#define TC_IMPL_TC_CORBA_StructDef_4 'r'
#define TC_IMPL_TC_CORBA_StructDef_5 'f'
#define TC_IMPL_TC_CORBA_StructDef_6 'a'
#define TC_IMPL_TC_CORBA_StructDef_7 'c'
#define TC_IMPL_TC_CORBA_StructDef_8 'e'
#define TC_IMPL_TC_CORBA_StructDef_9 '_'
#define TC_IMPL_TC_CORBA_StructDef_10 'r'
#define TC_IMPL_TC_CORBA_StructDef_11 'e'
#define TC_IMPL_TC_CORBA_StructDef_12 'p'
#define TC_IMPL_TC_CORBA_StructDef_13 'o'
#define TC_IMPL_TC_CORBA_StructDef_14 's'
#define TC_IMPL_TC_CORBA_StructDef_15 'i'
#define TC_IMPL_TC_CORBA_StructDef_16 't'
#define TC_IMPL_TC_CORBA_StructDef_17 'o'
#define TC_IMPL_TC_CORBA_StructDef_18 'r'
#define TC_IMPL_TC_CORBA_StructDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StructDef_struct;
#define TC_CORBA_StructDef ((CORBA_TypeCode)&TC_CORBA_StructDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_UnionDef) && !defined(_CORBA_UnionDef_defined)
#define ORBIT_DECL_CORBA_UnionDef 1
#define _CORBA_UnionDef_defined 1
#define CORBA_UnionDef__free CORBA_Object__free
typedef CORBA_Object CORBA_UnionDef;
extern CORBA_unsigned_long CORBA_UnionDef__classid;
#if !defined(TC_IMPL_TC_CORBA_UnionDef_0)
#define TC_IMPL_TC_CORBA_UnionDef_0 'i'
#define TC_IMPL_TC_CORBA_UnionDef_1 'n'
#define TC_IMPL_TC_CORBA_UnionDef_2 't'
#define TC_IMPL_TC_CORBA_UnionDef_3 'e'
#define TC_IMPL_TC_CORBA_UnionDef_4 'r'
#define TC_IMPL_TC_CORBA_UnionDef_5 'f'
#define TC_IMPL_TC_CORBA_UnionDef_6 'a'
#define TC_IMPL_TC_CORBA_UnionDef_7 'c'
#define TC_IMPL_TC_CORBA_UnionDef_8 'e'
#define TC_IMPL_TC_CORBA_UnionDef_9 '_'
#define TC_IMPL_TC_CORBA_UnionDef_10 'r'
#define TC_IMPL_TC_CORBA_UnionDef_11 'e'
#define TC_IMPL_TC_CORBA_UnionDef_12 'p'
#define TC_IMPL_TC_CORBA_UnionDef_13 'o'
#define TC_IMPL_TC_CORBA_UnionDef_14 's'
#define TC_IMPL_TC_CORBA_UnionDef_15 'i'
#define TC_IMPL_TC_CORBA_UnionDef_16 't'
#define TC_IMPL_TC_CORBA_UnionDef_17 'o'
#define TC_IMPL_TC_CORBA_UnionDef_18 'r'
#define TC_IMPL_TC_CORBA_UnionDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_UnionDef_struct;
#define TC_CORBA_UnionDef ((CORBA_TypeCode)&TC_CORBA_UnionDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_EnumDef) && !defined(_CORBA_EnumDef_defined)
#define ORBIT_DECL_CORBA_EnumDef 1
#define _CORBA_EnumDef_defined 1
#define CORBA_EnumDef__free CORBA_Object__free
typedef CORBA_Object CORBA_EnumDef;
extern CORBA_unsigned_long CORBA_EnumDef__classid;
#if !defined(TC_IMPL_TC_CORBA_EnumDef_0)
#define TC_IMPL_TC_CORBA_EnumDef_0 'i'
#define TC_IMPL_TC_CORBA_EnumDef_1 'n'
#define TC_IMPL_TC_CORBA_EnumDef_2 't'
#define TC_IMPL_TC_CORBA_EnumDef_3 'e'
#define TC_IMPL_TC_CORBA_EnumDef_4 'r'
#define TC_IMPL_TC_CORBA_EnumDef_5 'f'
#define TC_IMPL_TC_CORBA_EnumDef_6 'a'
#define TC_IMPL_TC_CORBA_EnumDef_7 'c'
#define TC_IMPL_TC_CORBA_EnumDef_8 'e'
#define TC_IMPL_TC_CORBA_EnumDef_9 '_'
#define TC_IMPL_TC_CORBA_EnumDef_10 'r'
#define TC_IMPL_TC_CORBA_EnumDef_11 'e'
#define TC_IMPL_TC_CORBA_EnumDef_12 'p'
#define TC_IMPL_TC_CORBA_EnumDef_13 'o'
#define TC_IMPL_TC_CORBA_EnumDef_14 's'
#define TC_IMPL_TC_CORBA_EnumDef_15 'i'
#define TC_IMPL_TC_CORBA_EnumDef_16 't'
#define TC_IMPL_TC_CORBA_EnumDef_17 'o'
#define TC_IMPL_TC_CORBA_EnumDef_18 'r'
#define TC_IMPL_TC_CORBA_EnumDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_EnumDef_struct;
#define TC_CORBA_EnumDef ((CORBA_TypeCode)&TC_CORBA_EnumDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_AliasDef) && !defined(_CORBA_AliasDef_defined)
#define ORBIT_DECL_CORBA_AliasDef 1
#define _CORBA_AliasDef_defined 1
#define CORBA_AliasDef__free CORBA_Object__free
typedef CORBA_Object CORBA_AliasDef;
extern CORBA_unsigned_long CORBA_AliasDef__classid;
#if !defined(TC_IMPL_TC_CORBA_AliasDef_0)
#define TC_IMPL_TC_CORBA_AliasDef_0 'i'
#define TC_IMPL_TC_CORBA_AliasDef_1 'n'
#define TC_IMPL_TC_CORBA_AliasDef_2 't'
#define TC_IMPL_TC_CORBA_AliasDef_3 'e'
#define TC_IMPL_TC_CORBA_AliasDef_4 'r'
#define TC_IMPL_TC_CORBA_AliasDef_5 'f'
#define TC_IMPL_TC_CORBA_AliasDef_6 'a'
#define TC_IMPL_TC_CORBA_AliasDef_7 'c'
#define TC_IMPL_TC_CORBA_AliasDef_8 'e'
#define TC_IMPL_TC_CORBA_AliasDef_9 '_'
#define TC_IMPL_TC_CORBA_AliasDef_10 'r'
#define TC_IMPL_TC_CORBA_AliasDef_11 'e'
#define TC_IMPL_TC_CORBA_AliasDef_12 'p'
#define TC_IMPL_TC_CORBA_AliasDef_13 'o'
#define TC_IMPL_TC_CORBA_AliasDef_14 's'
#define TC_IMPL_TC_CORBA_AliasDef_15 'i'
#define TC_IMPL_TC_CORBA_AliasDef_16 't'
#define TC_IMPL_TC_CORBA_AliasDef_17 'o'
#define TC_IMPL_TC_CORBA_AliasDef_18 'r'
#define TC_IMPL_TC_CORBA_AliasDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AliasDef_struct;
#define TC_CORBA_AliasDef ((CORBA_TypeCode)&TC_CORBA_AliasDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_PrimitiveDef) && !defined(_CORBA_PrimitiveDef_defined)
#define ORBIT_DECL_CORBA_PrimitiveDef 1
#define _CORBA_PrimitiveDef_defined 1
#define CORBA_PrimitiveDef__free CORBA_Object__free
typedef CORBA_Object CORBA_PrimitiveDef;
extern CORBA_unsigned_long CORBA_PrimitiveDef__classid;
#if !defined(TC_IMPL_TC_CORBA_PrimitiveDef_0)
#define TC_IMPL_TC_CORBA_PrimitiveDef_0 'i'
#define TC_IMPL_TC_CORBA_PrimitiveDef_1 'n'
#define TC_IMPL_TC_CORBA_PrimitiveDef_2 't'
#define TC_IMPL_TC_CORBA_PrimitiveDef_3 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_4 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_5 'f'
#define TC_IMPL_TC_CORBA_PrimitiveDef_6 'a'
#define TC_IMPL_TC_CORBA_PrimitiveDef_7 'c'
#define TC_IMPL_TC_CORBA_PrimitiveDef_8 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_9 '_'
#define TC_IMPL_TC_CORBA_PrimitiveDef_10 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_11 'e'
#define TC_IMPL_TC_CORBA_PrimitiveDef_12 'p'
#define TC_IMPL_TC_CORBA_PrimitiveDef_13 'o'
#define TC_IMPL_TC_CORBA_PrimitiveDef_14 's'
#define TC_IMPL_TC_CORBA_PrimitiveDef_15 'i'
#define TC_IMPL_TC_CORBA_PrimitiveDef_16 't'
#define TC_IMPL_TC_CORBA_PrimitiveDef_17 'o'
#define TC_IMPL_TC_CORBA_PrimitiveDef_18 'r'
#define TC_IMPL_TC_CORBA_PrimitiveDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_PrimitiveDef_struct;
#define TC_CORBA_PrimitiveDef ((CORBA_TypeCode)&TC_CORBA_PrimitiveDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_StringDef) && !defined(_CORBA_StringDef_defined)
#define ORBIT_DECL_CORBA_StringDef 1
#define _CORBA_StringDef_defined 1
#define CORBA_StringDef__free CORBA_Object__free
typedef CORBA_Object CORBA_StringDef;
extern CORBA_unsigned_long CORBA_StringDef__classid;
#if !defined(TC_IMPL_TC_CORBA_StringDef_0)
#define TC_IMPL_TC_CORBA_StringDef_0 'i'
#define TC_IMPL_TC_CORBA_StringDef_1 'n'
#define TC_IMPL_TC_CORBA_StringDef_2 't'
#define TC_IMPL_TC_CORBA_StringDef_3 'e'
#define TC_IMPL_TC_CORBA_StringDef_4 'r'
#define TC_IMPL_TC_CORBA_StringDef_5 'f'
#define TC_IMPL_TC_CORBA_StringDef_6 'a'
#define TC_IMPL_TC_CORBA_StringDef_7 'c'
#define TC_IMPL_TC_CORBA_StringDef_8 'e'
#define TC_IMPL_TC_CORBA_StringDef_9 '_'
#define TC_IMPL_TC_CORBA_StringDef_10 'r'
#define TC_IMPL_TC_CORBA_StringDef_11 'e'
#define TC_IMPL_TC_CORBA_StringDef_12 'p'
#define TC_IMPL_TC_CORBA_StringDef_13 'o'
#define TC_IMPL_TC_CORBA_StringDef_14 's'
#define TC_IMPL_TC_CORBA_StringDef_15 'i'
#define TC_IMPL_TC_CORBA_StringDef_16 't'
#define TC_IMPL_TC_CORBA_StringDef_17 'o'
#define TC_IMPL_TC_CORBA_StringDef_18 'r'
#define TC_IMPL_TC_CORBA_StringDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_StringDef_struct;
#define TC_CORBA_StringDef ((CORBA_TypeCode)&TC_CORBA_StringDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_WstringDef) && !defined(_CORBA_WstringDef_defined)
#define ORBIT_DECL_CORBA_WstringDef 1
#define _CORBA_WstringDef_defined 1
#define CORBA_WstringDef__free CORBA_Object__free
typedef CORBA_Object CORBA_WstringDef;
extern CORBA_unsigned_long CORBA_WstringDef__classid;
#if !defined(TC_IMPL_TC_CORBA_WstringDef_0)
#define TC_IMPL_TC_CORBA_WstringDef_0 'i'
#define TC_IMPL_TC_CORBA_WstringDef_1 'n'
#define TC_IMPL_TC_CORBA_WstringDef_2 't'
#define TC_IMPL_TC_CORBA_WstringDef_3 'e'
#define TC_IMPL_TC_CORBA_WstringDef_4 'r'
#define TC_IMPL_TC_CORBA_WstringDef_5 'f'
#define TC_IMPL_TC_CORBA_WstringDef_6 'a'
#define TC_IMPL_TC_CORBA_WstringDef_7 'c'
#define TC_IMPL_TC_CORBA_WstringDef_8 'e'
#define TC_IMPL_TC_CORBA_WstringDef_9 '_'
#define TC_IMPL_TC_CORBA_WstringDef_10 'r'
#define TC_IMPL_TC_CORBA_WstringDef_11 'e'
#define TC_IMPL_TC_CORBA_WstringDef_12 'p'
#define TC_IMPL_TC_CORBA_WstringDef_13 'o'
#define TC_IMPL_TC_CORBA_WstringDef_14 's'
#define TC_IMPL_TC_CORBA_WstringDef_15 'i'
#define TC_IMPL_TC_CORBA_WstringDef_16 't'
#define TC_IMPL_TC_CORBA_WstringDef_17 'o'
#define TC_IMPL_TC_CORBA_WstringDef_18 'r'
#define TC_IMPL_TC_CORBA_WstringDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_WstringDef_struct;
#define TC_CORBA_WstringDef ((CORBA_TypeCode)&TC_CORBA_WstringDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_FixedDef) && !defined(_CORBA_FixedDef_defined)
#define ORBIT_DECL_CORBA_FixedDef 1
#define _CORBA_FixedDef_defined 1
#define CORBA_FixedDef__free CORBA_Object__free
typedef CORBA_Object CORBA_FixedDef;
extern CORBA_unsigned_long CORBA_FixedDef__classid;
#if !defined(TC_IMPL_TC_CORBA_FixedDef_0)
#define TC_IMPL_TC_CORBA_FixedDef_0 'i'
#define TC_IMPL_TC_CORBA_FixedDef_1 'n'
#define TC_IMPL_TC_CORBA_FixedDef_2 't'
#define TC_IMPL_TC_CORBA_FixedDef_3 'e'
#define TC_IMPL_TC_CORBA_FixedDef_4 'r'
#define TC_IMPL_TC_CORBA_FixedDef_5 'f'
#define TC_IMPL_TC_CORBA_FixedDef_6 'a'
#define TC_IMPL_TC_CORBA_FixedDef_7 'c'
#define TC_IMPL_TC_CORBA_FixedDef_8 'e'
#define TC_IMPL_TC_CORBA_FixedDef_9 '_'
#define TC_IMPL_TC_CORBA_FixedDef_10 'r'
#define TC_IMPL_TC_CORBA_FixedDef_11 'e'
#define TC_IMPL_TC_CORBA_FixedDef_12 'p'
#define TC_IMPL_TC_CORBA_FixedDef_13 'o'
#define TC_IMPL_TC_CORBA_FixedDef_14 's'
#define TC_IMPL_TC_CORBA_FixedDef_15 'i'
#define TC_IMPL_TC_CORBA_FixedDef_16 't'
#define TC_IMPL_TC_CORBA_FixedDef_17 'o'
#define TC_IMPL_TC_CORBA_FixedDef_18 'r'
#define TC_IMPL_TC_CORBA_FixedDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_FixedDef_struct;
#define TC_CORBA_FixedDef ((CORBA_TypeCode)&TC_CORBA_FixedDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_SequenceDef) && !defined(_CORBA_SequenceDef_defined)
#define ORBIT_DECL_CORBA_SequenceDef 1
#define _CORBA_SequenceDef_defined 1
#define CORBA_SequenceDef__free CORBA_Object__free
typedef CORBA_Object CORBA_SequenceDef;
extern CORBA_unsigned_long CORBA_SequenceDef__classid;
#if !defined(TC_IMPL_TC_CORBA_SequenceDef_0)
#define TC_IMPL_TC_CORBA_SequenceDef_0 'i'
#define TC_IMPL_TC_CORBA_SequenceDef_1 'n'
#define TC_IMPL_TC_CORBA_SequenceDef_2 't'
#define TC_IMPL_TC_CORBA_SequenceDef_3 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_4 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_5 'f'
#define TC_IMPL_TC_CORBA_SequenceDef_6 'a'
#define TC_IMPL_TC_CORBA_SequenceDef_7 'c'
#define TC_IMPL_TC_CORBA_SequenceDef_8 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_9 '_'
#define TC_IMPL_TC_CORBA_SequenceDef_10 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_11 'e'
#define TC_IMPL_TC_CORBA_SequenceDef_12 'p'
#define TC_IMPL_TC_CORBA_SequenceDef_13 'o'
#define TC_IMPL_TC_CORBA_SequenceDef_14 's'
#define TC_IMPL_TC_CORBA_SequenceDef_15 'i'
#define TC_IMPL_TC_CORBA_SequenceDef_16 't'
#define TC_IMPL_TC_CORBA_SequenceDef_17 'o'
#define TC_IMPL_TC_CORBA_SequenceDef_18 'r'
#define TC_IMPL_TC_CORBA_SequenceDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_SequenceDef_struct;
#define TC_CORBA_SequenceDef ((CORBA_TypeCode)&TC_CORBA_SequenceDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ArrayDef) && !defined(_CORBA_ArrayDef_defined)
#define ORBIT_DECL_CORBA_ArrayDef 1
#define _CORBA_ArrayDef_defined 1
#define CORBA_ArrayDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ArrayDef;
extern CORBA_unsigned_long CORBA_ArrayDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ArrayDef_0)
#define TC_IMPL_TC_CORBA_ArrayDef_0 'i'
#define TC_IMPL_TC_CORBA_ArrayDef_1 'n'
#define TC_IMPL_TC_CORBA_ArrayDef_2 't'
#define TC_IMPL_TC_CORBA_ArrayDef_3 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_4 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_5 'f'
#define TC_IMPL_TC_CORBA_ArrayDef_6 'a'
#define TC_IMPL_TC_CORBA_ArrayDef_7 'c'
#define TC_IMPL_TC_CORBA_ArrayDef_8 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_9 '_'
#define TC_IMPL_TC_CORBA_ArrayDef_10 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_11 'e'
#define TC_IMPL_TC_CORBA_ArrayDef_12 'p'
#define TC_IMPL_TC_CORBA_ArrayDef_13 'o'
#define TC_IMPL_TC_CORBA_ArrayDef_14 's'
#define TC_IMPL_TC_CORBA_ArrayDef_15 'i'
#define TC_IMPL_TC_CORBA_ArrayDef_16 't'
#define TC_IMPL_TC_CORBA_ArrayDef_17 'o'
#define TC_IMPL_TC_CORBA_ArrayDef_18 'r'
#define TC_IMPL_TC_CORBA_ArrayDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ArrayDef_struct;
#define TC_CORBA_ArrayDef ((CORBA_TypeCode)&TC_CORBA_ArrayDef_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_ExceptionDef) && !defined(_CORBA_ExceptionDef_defined)
#define ORBIT_DECL_CORBA_ExceptionDef 1
#define _CORBA_ExceptionDef_defined 1
#define CORBA_ExceptionDef__free CORBA_Object__free
typedef CORBA_Object CORBA_ExceptionDef;
extern CORBA_unsigned_long CORBA_ExceptionDef__classid;
#if !defined(TC_IMPL_TC_CORBA_ExceptionDef_0)
#define TC_IMPL_TC_CORBA_ExceptionDef_0 'i'
#define TC_IMPL_TC_CORBA_ExceptionDef_1 'n'
#define TC_IMPL_TC_CORBA_ExceptionDef_2 't'
#define TC_IMPL_TC_CORBA_ExceptionDef_3 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_4 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_5 'f'
#define TC_IMPL_TC_CORBA_ExceptionDef_6 'a'
#define TC_IMPL_TC_CORBA_ExceptionDef_7 'c'
#define TC_IMPL_TC_CORBA_ExceptionDef_8 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_9 '_'
#define TC_IMPL_TC_CORBA_ExceptionDef_10 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_11 'e'
#define TC_IMPL_TC_CORBA_ExceptionDef_12 'p'
#define TC_IMPL_TC_CORBA_ExceptionDef_13 'o'
#define TC_IMPL_TC_CORBA_ExceptionDef_14 's'
#define TC_IMPL_TC_CORBA_ExceptionDef_15 'i'
#define TC_IMPL_TC_CORBA_ExceptionDef_16 't'
#define TC_IMPL_TC_CORBA_ExceptionDef_17 'o'
#define TC_IMPL_TC_CORBA_ExceptionDef_18 'r'
#define TC_IMPL_TC_CORBA_ExceptionDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ExceptionDef_struct;
#define TC_CORBA_ExceptionDef ((CORBA_TypeCode)&TC_CORBA_ExceptionDef_struct)
#endif
#endif
#if !defined(_CORBA_ExceptionDescription_defined)
#define _CORBA_ExceptionDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_TypeCode type;
} CORBA_ExceptionDescription;

#if !defined(TC_IMPL_TC_CORBA_ExceptionDescription_0)
#define TC_IMPL_TC_CORBA_ExceptionDescription_0 'i'
#define TC_IMPL_TC_CORBA_ExceptionDescription_1 'n'
#define TC_IMPL_TC_CORBA_ExceptionDescription_2 't'
#define TC_IMPL_TC_CORBA_ExceptionDescription_3 'e'
#define TC_IMPL_TC_CORBA_ExceptionDescription_4 'r'
#define TC_IMPL_TC_CORBA_ExceptionDescription_5 'f'
#define TC_IMPL_TC_CORBA_ExceptionDescription_6 'a'
#define TC_IMPL_TC_CORBA_ExceptionDescription_7 'c'
#define TC_IMPL_TC_CORBA_ExceptionDescription_8 'e'
#define TC_IMPL_TC_CORBA_ExceptionDescription_9 '_'
#define TC_IMPL_TC_CORBA_ExceptionDescription_10 'r'
#define TC_IMPL_TC_CORBA_ExceptionDescription_11 'e'
#define TC_IMPL_TC_CORBA_ExceptionDescription_12 'p'
#define TC_IMPL_TC_CORBA_ExceptionDescription_13 'o'
#define TC_IMPL_TC_CORBA_ExceptionDescription_14 's'
#define TC_IMPL_TC_CORBA_ExceptionDescription_15 'i'
#define TC_IMPL_TC_CORBA_ExceptionDescription_16 't'
#define TC_IMPL_TC_CORBA_ExceptionDescription_17 'o'
#define TC_IMPL_TC_CORBA_ExceptionDescription_18 'r'
#define TC_IMPL_TC_CORBA_ExceptionDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ExceptionDescription_struct;
#define TC_CORBA_ExceptionDescription ((CORBA_TypeCode)&TC_CORBA_ExceptionDescription_struct)
#endif
extern CORBA_ExceptionDescription* CORBA_ExceptionDescription__alloc(void);
extern gpointer CORBA_ExceptionDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_AttributeMode_defined)
#define _CORBA_AttributeMode_defined 1
typedef enum {
  CORBA_ATTR_NORMAL,
  CORBA_ATTR_READONLY
} CORBA_AttributeMode;
#if !defined(TC_IMPL_TC_CORBA_AttributeMode_0)
#define TC_IMPL_TC_CORBA_AttributeMode_0 'i'
#define TC_IMPL_TC_CORBA_AttributeMode_1 'n'
#define TC_IMPL_TC_CORBA_AttributeMode_2 't'
#define TC_IMPL_TC_CORBA_AttributeMode_3 'e'
#define TC_IMPL_TC_CORBA_AttributeMode_4 'r'
#define TC_IMPL_TC_CORBA_AttributeMode_5 'f'
#define TC_IMPL_TC_CORBA_AttributeMode_6 'a'
#define TC_IMPL_TC_CORBA_AttributeMode_7 'c'
#define TC_IMPL_TC_CORBA_AttributeMode_8 'e'
#define TC_IMPL_TC_CORBA_AttributeMode_9 '_'
#define TC_IMPL_TC_CORBA_AttributeMode_10 'r'
#define TC_IMPL_TC_CORBA_AttributeMode_11 'e'
#define TC_IMPL_TC_CORBA_AttributeMode_12 'p'
#define TC_IMPL_TC_CORBA_AttributeMode_13 'o'
#define TC_IMPL_TC_CORBA_AttributeMode_14 's'
#define TC_IMPL_TC_CORBA_AttributeMode_15 'i'
#define TC_IMPL_TC_CORBA_AttributeMode_16 't'
#define TC_IMPL_TC_CORBA_AttributeMode_17 'o'
#define TC_IMPL_TC_CORBA_AttributeMode_18 'r'
#define TC_IMPL_TC_CORBA_AttributeMode_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AttributeMode_struct;
#define TC_CORBA_AttributeMode ((CORBA_TypeCode)&TC_CORBA_AttributeMode_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_AttributeDef) && !defined(_CORBA_AttributeDef_defined)
#define ORBIT_DECL_CORBA_AttributeDef 1
#define _CORBA_AttributeDef_defined 1
#define CORBA_AttributeDef__free CORBA_Object__free
typedef CORBA_Object CORBA_AttributeDef;
extern CORBA_unsigned_long CORBA_AttributeDef__classid;
#if !defined(TC_IMPL_TC_CORBA_AttributeDef_0)
#define TC_IMPL_TC_CORBA_AttributeDef_0 'i'
#define TC_IMPL_TC_CORBA_AttributeDef_1 'n'
#define TC_IMPL_TC_CORBA_AttributeDef_2 't'
#define TC_IMPL_TC_CORBA_AttributeDef_3 'e'
#define TC_IMPL_TC_CORBA_AttributeDef_4 'r'
#define TC_IMPL_TC_CORBA_AttributeDef_5 'f'
#define TC_IMPL_TC_CORBA_AttributeDef_6 'a'
#define TC_IMPL_TC_CORBA_AttributeDef_7 'c'
#define TC_IMPL_TC_CORBA_AttributeDef_8 'e'
#define TC_IMPL_TC_CORBA_AttributeDef_9 '_'
#define TC_IMPL_TC_CORBA_AttributeDef_10 'r'
#define TC_IMPL_TC_CORBA_AttributeDef_11 'e'
#define TC_IMPL_TC_CORBA_AttributeDef_12 'p'
#define TC_IMPL_TC_CORBA_AttributeDef_13 'o'
#define TC_IMPL_TC_CORBA_AttributeDef_14 's'
#define TC_IMPL_TC_CORBA_AttributeDef_15 'i'
#define TC_IMPL_TC_CORBA_AttributeDef_16 't'
#define TC_IMPL_TC_CORBA_AttributeDef_17 'o'
#define TC_IMPL_TC_CORBA_AttributeDef_18 'r'
#define TC_IMPL_TC_CORBA_AttributeDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AttributeDef_struct;
#define TC_CORBA_AttributeDef ((CORBA_TypeCode)&TC_CORBA_AttributeDef_struct)
#endif
#endif
#if !defined(_CORBA_AttributeDescription_defined)
#define _CORBA_AttributeDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_TypeCode type;
CORBA_AttributeMode mode;
} CORBA_AttributeDescription;

#if !defined(TC_IMPL_TC_CORBA_AttributeDescription_0)
#define TC_IMPL_TC_CORBA_AttributeDescription_0 'i'
#define TC_IMPL_TC_CORBA_AttributeDescription_1 'n'
#define TC_IMPL_TC_CORBA_AttributeDescription_2 't'
#define TC_IMPL_TC_CORBA_AttributeDescription_3 'e'
#define TC_IMPL_TC_CORBA_AttributeDescription_4 'r'
#define TC_IMPL_TC_CORBA_AttributeDescription_5 'f'
#define TC_IMPL_TC_CORBA_AttributeDescription_6 'a'
#define TC_IMPL_TC_CORBA_AttributeDescription_7 'c'
#define TC_IMPL_TC_CORBA_AttributeDescription_8 'e'
#define TC_IMPL_TC_CORBA_AttributeDescription_9 '_'
#define TC_IMPL_TC_CORBA_AttributeDescription_10 'r'
#define TC_IMPL_TC_CORBA_AttributeDescription_11 'e'
#define TC_IMPL_TC_CORBA_AttributeDescription_12 'p'
#define TC_IMPL_TC_CORBA_AttributeDescription_13 'o'
#define TC_IMPL_TC_CORBA_AttributeDescription_14 's'
#define TC_IMPL_TC_CORBA_AttributeDescription_15 'i'
#define TC_IMPL_TC_CORBA_AttributeDescription_16 't'
#define TC_IMPL_TC_CORBA_AttributeDescription_17 'o'
#define TC_IMPL_TC_CORBA_AttributeDescription_18 'r'
#define TC_IMPL_TC_CORBA_AttributeDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AttributeDescription_struct;
#define TC_CORBA_AttributeDescription ((CORBA_TypeCode)&TC_CORBA_AttributeDescription_struct)
#endif
extern CORBA_AttributeDescription* CORBA_AttributeDescription__alloc(void);
extern gpointer CORBA_AttributeDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_OperationMode_defined)
#define _CORBA_OperationMode_defined 1
typedef enum {
  CORBA_OP_NORMAL,
  CORBA_OP_ONEWAY
} CORBA_OperationMode;
#if !defined(TC_IMPL_TC_CORBA_OperationMode_0)
#define TC_IMPL_TC_CORBA_OperationMode_0 'i'
#define TC_IMPL_TC_CORBA_OperationMode_1 'n'
#define TC_IMPL_TC_CORBA_OperationMode_2 't'
#define TC_IMPL_TC_CORBA_OperationMode_3 'e'
#define TC_IMPL_TC_CORBA_OperationMode_4 'r'
#define TC_IMPL_TC_CORBA_OperationMode_5 'f'
#define TC_IMPL_TC_CORBA_OperationMode_6 'a'
#define TC_IMPL_TC_CORBA_OperationMode_7 'c'
#define TC_IMPL_TC_CORBA_OperationMode_8 'e'
#define TC_IMPL_TC_CORBA_OperationMode_9 '_'
#define TC_IMPL_TC_CORBA_OperationMode_10 'r'
#define TC_IMPL_TC_CORBA_OperationMode_11 'e'
#define TC_IMPL_TC_CORBA_OperationMode_12 'p'
#define TC_IMPL_TC_CORBA_OperationMode_13 'o'
#define TC_IMPL_TC_CORBA_OperationMode_14 's'
#define TC_IMPL_TC_CORBA_OperationMode_15 'i'
#define TC_IMPL_TC_CORBA_OperationMode_16 't'
#define TC_IMPL_TC_CORBA_OperationMode_17 'o'
#define TC_IMPL_TC_CORBA_OperationMode_18 'r'
#define TC_IMPL_TC_CORBA_OperationMode_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_OperationMode_struct;
#define TC_CORBA_OperationMode ((CORBA_TypeCode)&TC_CORBA_OperationMode_struct)
#endif
#endif
#if !defined(_CORBA_ParameterMode_defined)
#define _CORBA_ParameterMode_defined 1
typedef enum {
  CORBA_PARAM_IN,
  CORBA_PARAM_OUT,
  CORBA_PARAM_INOUT
} CORBA_ParameterMode;
#if !defined(TC_IMPL_TC_CORBA_ParameterMode_0)
#define TC_IMPL_TC_CORBA_ParameterMode_0 'i'
#define TC_IMPL_TC_CORBA_ParameterMode_1 'n'
#define TC_IMPL_TC_CORBA_ParameterMode_2 't'
#define TC_IMPL_TC_CORBA_ParameterMode_3 'e'
#define TC_IMPL_TC_CORBA_ParameterMode_4 'r'
#define TC_IMPL_TC_CORBA_ParameterMode_5 'f'
#define TC_IMPL_TC_CORBA_ParameterMode_6 'a'
#define TC_IMPL_TC_CORBA_ParameterMode_7 'c'
#define TC_IMPL_TC_CORBA_ParameterMode_8 'e'
#define TC_IMPL_TC_CORBA_ParameterMode_9 '_'
#define TC_IMPL_TC_CORBA_ParameterMode_10 'r'
#define TC_IMPL_TC_CORBA_ParameterMode_11 'e'
#define TC_IMPL_TC_CORBA_ParameterMode_12 'p'
#define TC_IMPL_TC_CORBA_ParameterMode_13 'o'
#define TC_IMPL_TC_CORBA_ParameterMode_14 's'
#define TC_IMPL_TC_CORBA_ParameterMode_15 'i'
#define TC_IMPL_TC_CORBA_ParameterMode_16 't'
#define TC_IMPL_TC_CORBA_ParameterMode_17 'o'
#define TC_IMPL_TC_CORBA_ParameterMode_18 'r'
#define TC_IMPL_TC_CORBA_ParameterMode_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ParameterMode_struct;
#define TC_CORBA_ParameterMode ((CORBA_TypeCode)&TC_CORBA_ParameterMode_struct)
#endif
#endif
#if !defined(_CORBA_ParameterDescription_defined)
#define _CORBA_ParameterDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_TypeCode type;
CORBA_IDLType type_def;
CORBA_ParameterMode mode;
} CORBA_ParameterDescription;

#if !defined(TC_IMPL_TC_CORBA_ParameterDescription_0)
#define TC_IMPL_TC_CORBA_ParameterDescription_0 'i'
#define TC_IMPL_TC_CORBA_ParameterDescription_1 'n'
#define TC_IMPL_TC_CORBA_ParameterDescription_2 't'
#define TC_IMPL_TC_CORBA_ParameterDescription_3 'e'
#define TC_IMPL_TC_CORBA_ParameterDescription_4 'r'
#define TC_IMPL_TC_CORBA_ParameterDescription_5 'f'
#define TC_IMPL_TC_CORBA_ParameterDescription_6 'a'
#define TC_IMPL_TC_CORBA_ParameterDescription_7 'c'
#define TC_IMPL_TC_CORBA_ParameterDescription_8 'e'
#define TC_IMPL_TC_CORBA_ParameterDescription_9 '_'
#define TC_IMPL_TC_CORBA_ParameterDescription_10 'r'
#define TC_IMPL_TC_CORBA_ParameterDescription_11 'e'
#define TC_IMPL_TC_CORBA_ParameterDescription_12 'p'
#define TC_IMPL_TC_CORBA_ParameterDescription_13 'o'
#define TC_IMPL_TC_CORBA_ParameterDescription_14 's'
#define TC_IMPL_TC_CORBA_ParameterDescription_15 'i'
#define TC_IMPL_TC_CORBA_ParameterDescription_16 't'
#define TC_IMPL_TC_CORBA_ParameterDescription_17 'o'
#define TC_IMPL_TC_CORBA_ParameterDescription_18 'r'
#define TC_IMPL_TC_CORBA_ParameterDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ParameterDescription_struct;
#define TC_CORBA_ParameterDescription ((CORBA_TypeCode)&TC_CORBA_ParameterDescription_struct)
#endif
extern CORBA_ParameterDescription* CORBA_ParameterDescription__alloc(void);
extern gpointer CORBA_ParameterDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_ParameterDescription) && !defined(_CORBA_sequence_CORBA_ParameterDescription_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_ParameterDescription 1
#define _CORBA_sequence_CORBA_ParameterDescription_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ParameterDescription_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_ParameterDescription* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_ParameterDescription;
CORBA_ParameterDescription *CORBA_sequence_CORBA_ParameterDescription_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ParameterDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_ParameterDescription_struct;
#define TC_CORBA_sequence_CORBA_ParameterDescription ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_ParameterDescription_struct)
#endif
extern CORBA_sequence_CORBA_ParameterDescription* CORBA_sequence_CORBA_ParameterDescription__alloc(void);
extern gpointer CORBA_sequence_CORBA_ParameterDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_ParDescriptionSeq_defined)
#define _CORBA_ParDescriptionSeq_defined 1
typedef CORBA_sequence_CORBA_ParameterDescription CORBA_ParDescriptionSeq;
#if !defined(TC_IMPL_TC_CORBA_ParDescriptionSeq_0)
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_0 'i'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_1 'n'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_2 't'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_3 'e'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_4 'r'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_5 'f'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_6 'a'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_7 'c'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_8 'e'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_9 '_'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_10 'r'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_11 'e'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_12 'p'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_13 'o'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_14 's'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_15 'i'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_16 't'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_17 'o'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_18 'r'
#define TC_IMPL_TC_CORBA_ParDescriptionSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ParDescriptionSeq_struct;
#define TC_CORBA_ParDescriptionSeq ((CORBA_TypeCode)&TC_CORBA_ParDescriptionSeq_struct)
#endif
extern CORBA_ParDescriptionSeq* CORBA_ParDescriptionSeq__alloc(void);
extern gpointer CORBA_ParDescriptionSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_ContextIdentifier_defined)
#define _CORBA_ContextIdentifier_defined 1
typedef CORBA_Identifier CORBA_ContextIdentifier;
#if !defined(TC_IMPL_TC_CORBA_ContextIdentifier_0)
#define TC_IMPL_TC_CORBA_ContextIdentifier_0 'i'
#define TC_IMPL_TC_CORBA_ContextIdentifier_1 'n'
#define TC_IMPL_TC_CORBA_ContextIdentifier_2 't'
#define TC_IMPL_TC_CORBA_ContextIdentifier_3 'e'
#define TC_IMPL_TC_CORBA_ContextIdentifier_4 'r'
#define TC_IMPL_TC_CORBA_ContextIdentifier_5 'f'
#define TC_IMPL_TC_CORBA_ContextIdentifier_6 'a'
#define TC_IMPL_TC_CORBA_ContextIdentifier_7 'c'
#define TC_IMPL_TC_CORBA_ContextIdentifier_8 'e'
#define TC_IMPL_TC_CORBA_ContextIdentifier_9 '_'
#define TC_IMPL_TC_CORBA_ContextIdentifier_10 'r'
#define TC_IMPL_TC_CORBA_ContextIdentifier_11 'e'
#define TC_IMPL_TC_CORBA_ContextIdentifier_12 'p'
#define TC_IMPL_TC_CORBA_ContextIdentifier_13 'o'
#define TC_IMPL_TC_CORBA_ContextIdentifier_14 's'
#define TC_IMPL_TC_CORBA_ContextIdentifier_15 'i'
#define TC_IMPL_TC_CORBA_ContextIdentifier_16 't'
#define TC_IMPL_TC_CORBA_ContextIdentifier_17 'o'
#define TC_IMPL_TC_CORBA_ContextIdentifier_18 'r'
#define TC_IMPL_TC_CORBA_ContextIdentifier_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ContextIdentifier_struct;
#define TC_CORBA_ContextIdentifier ((CORBA_TypeCode)&TC_CORBA_ContextIdentifier_struct)
#endif
#define CORBA_ContextIdentifier__free CORBA_string__free
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_ContextIdentifier) && !defined(_CORBA_sequence_CORBA_ContextIdentifier_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_ContextIdentifier 1
#define _CORBA_sequence_CORBA_ContextIdentifier_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ContextIdentifier_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_ContextIdentifier* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_ContextIdentifier;
CORBA_ContextIdentifier *CORBA_sequence_CORBA_ContextIdentifier_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ContextIdentifier_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_ContextIdentifier_struct;
#define TC_CORBA_sequence_CORBA_ContextIdentifier ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_ContextIdentifier_struct)
#endif
extern CORBA_sequence_CORBA_ContextIdentifier* CORBA_sequence_CORBA_ContextIdentifier__alloc(void);
extern gpointer CORBA_sequence_CORBA_ContextIdentifier__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_ContextIdSeq_defined)
#define _CORBA_ContextIdSeq_defined 1
typedef CORBA_sequence_CORBA_ContextIdentifier CORBA_ContextIdSeq;
#if !defined(TC_IMPL_TC_CORBA_ContextIdSeq_0)
#define TC_IMPL_TC_CORBA_ContextIdSeq_0 'i'
#define TC_IMPL_TC_CORBA_ContextIdSeq_1 'n'
#define TC_IMPL_TC_CORBA_ContextIdSeq_2 't'
#define TC_IMPL_TC_CORBA_ContextIdSeq_3 'e'
#define TC_IMPL_TC_CORBA_ContextIdSeq_4 'r'
#define TC_IMPL_TC_CORBA_ContextIdSeq_5 'f'
#define TC_IMPL_TC_CORBA_ContextIdSeq_6 'a'
#define TC_IMPL_TC_CORBA_ContextIdSeq_7 'c'
#define TC_IMPL_TC_CORBA_ContextIdSeq_8 'e'
#define TC_IMPL_TC_CORBA_ContextIdSeq_9 '_'
#define TC_IMPL_TC_CORBA_ContextIdSeq_10 'r'
#define TC_IMPL_TC_CORBA_ContextIdSeq_11 'e'
#define TC_IMPL_TC_CORBA_ContextIdSeq_12 'p'
#define TC_IMPL_TC_CORBA_ContextIdSeq_13 'o'
#define TC_IMPL_TC_CORBA_ContextIdSeq_14 's'
#define TC_IMPL_TC_CORBA_ContextIdSeq_15 'i'
#define TC_IMPL_TC_CORBA_ContextIdSeq_16 't'
#define TC_IMPL_TC_CORBA_ContextIdSeq_17 'o'
#define TC_IMPL_TC_CORBA_ContextIdSeq_18 'r'
#define TC_IMPL_TC_CORBA_ContextIdSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ContextIdSeq_struct;
#define TC_CORBA_ContextIdSeq ((CORBA_TypeCode)&TC_CORBA_ContextIdSeq_struct)
#endif
extern CORBA_ContextIdSeq* CORBA_ContextIdSeq__alloc(void);
extern gpointer CORBA_ContextIdSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_ExceptionDef) && !defined(_CORBA_sequence_CORBA_ExceptionDef_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_ExceptionDef 1
#define _CORBA_sequence_CORBA_ExceptionDef_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDef_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_ExceptionDef* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_ExceptionDef;
CORBA_ExceptionDef *CORBA_sequence_CORBA_ExceptionDef_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_ExceptionDef_struct;
#define TC_CORBA_sequence_CORBA_ExceptionDef ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_ExceptionDef_struct)
#endif
extern CORBA_sequence_CORBA_ExceptionDef* CORBA_sequence_CORBA_ExceptionDef__alloc(void);
extern gpointer CORBA_sequence_CORBA_ExceptionDef__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_ExceptionDefSeq_defined)
#define _CORBA_ExceptionDefSeq_defined 1
typedef CORBA_sequence_CORBA_ExceptionDef CORBA_ExceptionDefSeq;
#if !defined(TC_IMPL_TC_CORBA_ExceptionDefSeq_0)
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_0 'i'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_1 'n'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_2 't'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_3 'e'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_4 'r'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_5 'f'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_6 'a'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_7 'c'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_8 'e'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_9 '_'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_10 'r'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_11 'e'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_12 'p'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_13 'o'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_14 's'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_15 'i'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_16 't'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_17 'o'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_18 'r'
#define TC_IMPL_TC_CORBA_ExceptionDefSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ExceptionDefSeq_struct;
#define TC_CORBA_ExceptionDefSeq ((CORBA_TypeCode)&TC_CORBA_ExceptionDefSeq_struct)
#endif
extern CORBA_ExceptionDefSeq* CORBA_ExceptionDefSeq__alloc(void);
extern gpointer CORBA_ExceptionDefSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_ExceptionDescription) && !defined(_CORBA_sequence_CORBA_ExceptionDescription_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_ExceptionDescription 1
#define _CORBA_sequence_CORBA_ExceptionDescription_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_ExceptionDescription_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_ExceptionDescription* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_ExceptionDescription;
CORBA_ExceptionDescription *CORBA_sequence_CORBA_ExceptionDescription_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_ExceptionDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_ExceptionDescription_struct;
#define TC_CORBA_sequence_CORBA_ExceptionDescription ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_ExceptionDescription_struct)
#endif
extern CORBA_sequence_CORBA_ExceptionDescription* CORBA_sequence_CORBA_ExceptionDescription__alloc(void);
extern gpointer CORBA_sequence_CORBA_ExceptionDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_ExcDescriptionSeq_defined)
#define _CORBA_ExcDescriptionSeq_defined 1
typedef CORBA_sequence_CORBA_ExceptionDescription CORBA_ExcDescriptionSeq;
#if !defined(TC_IMPL_TC_CORBA_ExcDescriptionSeq_0)
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_0 'i'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_1 'n'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_2 't'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_3 'e'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_4 'r'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_5 'f'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_6 'a'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_7 'c'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_8 'e'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_9 '_'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_10 'r'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_11 'e'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_12 'p'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_13 'o'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_14 's'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_15 'i'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_16 't'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_17 'o'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_18 'r'
#define TC_IMPL_TC_CORBA_ExcDescriptionSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_ExcDescriptionSeq_struct;
#define TC_CORBA_ExcDescriptionSeq ((CORBA_TypeCode)&TC_CORBA_ExcDescriptionSeq_struct)
#endif
extern CORBA_ExcDescriptionSeq* CORBA_ExcDescriptionSeq__alloc(void);
extern gpointer CORBA_ExcDescriptionSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_OperationDef) && !defined(_CORBA_OperationDef_defined)
#define ORBIT_DECL_CORBA_OperationDef 1
#define _CORBA_OperationDef_defined 1
#define CORBA_OperationDef__free CORBA_Object__free
typedef CORBA_Object CORBA_OperationDef;
extern CORBA_unsigned_long CORBA_OperationDef__classid;
#if !defined(TC_IMPL_TC_CORBA_OperationDef_0)
#define TC_IMPL_TC_CORBA_OperationDef_0 'i'
#define TC_IMPL_TC_CORBA_OperationDef_1 'n'
#define TC_IMPL_TC_CORBA_OperationDef_2 't'
#define TC_IMPL_TC_CORBA_OperationDef_3 'e'
#define TC_IMPL_TC_CORBA_OperationDef_4 'r'
#define TC_IMPL_TC_CORBA_OperationDef_5 'f'
#define TC_IMPL_TC_CORBA_OperationDef_6 'a'
#define TC_IMPL_TC_CORBA_OperationDef_7 'c'
#define TC_IMPL_TC_CORBA_OperationDef_8 'e'
#define TC_IMPL_TC_CORBA_OperationDef_9 '_'
#define TC_IMPL_TC_CORBA_OperationDef_10 'r'
#define TC_IMPL_TC_CORBA_OperationDef_11 'e'
#define TC_IMPL_TC_CORBA_OperationDef_12 'p'
#define TC_IMPL_TC_CORBA_OperationDef_13 'o'
#define TC_IMPL_TC_CORBA_OperationDef_14 's'
#define TC_IMPL_TC_CORBA_OperationDef_15 'i'
#define TC_IMPL_TC_CORBA_OperationDef_16 't'
#define TC_IMPL_TC_CORBA_OperationDef_17 'o'
#define TC_IMPL_TC_CORBA_OperationDef_18 'r'
#define TC_IMPL_TC_CORBA_OperationDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_OperationDef_struct;
#define TC_CORBA_OperationDef ((CORBA_TypeCode)&TC_CORBA_OperationDef_struct)
#endif
#endif
#if !defined(_CORBA_OperationDescription_defined)
#define _CORBA_OperationDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_TypeCode result;
CORBA_OperationMode mode;
CORBA_ContextIdSeq contexts;
CORBA_ParDescriptionSeq parameters;
CORBA_ExcDescriptionSeq exceptions;
} CORBA_OperationDescription;

#if !defined(TC_IMPL_TC_CORBA_OperationDescription_0)
#define TC_IMPL_TC_CORBA_OperationDescription_0 'i'
#define TC_IMPL_TC_CORBA_OperationDescription_1 'n'
#define TC_IMPL_TC_CORBA_OperationDescription_2 't'
#define TC_IMPL_TC_CORBA_OperationDescription_3 'e'
#define TC_IMPL_TC_CORBA_OperationDescription_4 'r'
#define TC_IMPL_TC_CORBA_OperationDescription_5 'f'
#define TC_IMPL_TC_CORBA_OperationDescription_6 'a'
#define TC_IMPL_TC_CORBA_OperationDescription_7 'c'
#define TC_IMPL_TC_CORBA_OperationDescription_8 'e'
#define TC_IMPL_TC_CORBA_OperationDescription_9 '_'
#define TC_IMPL_TC_CORBA_OperationDescription_10 'r'
#define TC_IMPL_TC_CORBA_OperationDescription_11 'e'
#define TC_IMPL_TC_CORBA_OperationDescription_12 'p'
#define TC_IMPL_TC_CORBA_OperationDescription_13 'o'
#define TC_IMPL_TC_CORBA_OperationDescription_14 's'
#define TC_IMPL_TC_CORBA_OperationDescription_15 'i'
#define TC_IMPL_TC_CORBA_OperationDescription_16 't'
#define TC_IMPL_TC_CORBA_OperationDescription_17 'o'
#define TC_IMPL_TC_CORBA_OperationDescription_18 'r'
#define TC_IMPL_TC_CORBA_OperationDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_OperationDescription_struct;
#define TC_CORBA_OperationDescription ((CORBA_TypeCode)&TC_CORBA_OperationDescription_struct)
#endif
extern CORBA_OperationDescription* CORBA_OperationDescription__alloc(void);
extern gpointer CORBA_OperationDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_RepositoryId) && !defined(_CORBA_sequence_CORBA_RepositoryId_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_RepositoryId 1
#define _CORBA_sequence_CORBA_RepositoryId_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_RepositoryId_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_RepositoryId* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_RepositoryId;
CORBA_RepositoryId *CORBA_sequence_CORBA_RepositoryId_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_RepositoryId_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_RepositoryId_struct;
#define TC_CORBA_sequence_CORBA_RepositoryId ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_RepositoryId_struct)
#endif
extern CORBA_sequence_CORBA_RepositoryId* CORBA_sequence_CORBA_RepositoryId__alloc(void);
extern gpointer CORBA_sequence_CORBA_RepositoryId__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_RepositoryIdSeq_defined)
#define _CORBA_RepositoryIdSeq_defined 1
typedef CORBA_sequence_CORBA_RepositoryId CORBA_RepositoryIdSeq;
#if !defined(TC_IMPL_TC_CORBA_RepositoryIdSeq_0)
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_0 'i'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_1 'n'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_2 't'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_3 'e'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_4 'r'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_5 'f'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_6 'a'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_7 'c'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_8 'e'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_9 '_'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_10 'r'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_11 'e'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_12 'p'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_13 'o'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_14 's'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_15 'i'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_16 't'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_17 'o'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_18 'r'
#define TC_IMPL_TC_CORBA_RepositoryIdSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_RepositoryIdSeq_struct;
#define TC_CORBA_RepositoryIdSeq ((CORBA_TypeCode)&TC_CORBA_RepositoryIdSeq_struct)
#endif
extern CORBA_RepositoryIdSeq* CORBA_RepositoryIdSeq__alloc(void);
extern gpointer CORBA_RepositoryIdSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_OperationDescription) && !defined(_CORBA_sequence_CORBA_OperationDescription_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_OperationDescription 1
#define _CORBA_sequence_CORBA_OperationDescription_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_OperationDescription_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_OperationDescription* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_OperationDescription;
CORBA_OperationDescription *CORBA_sequence_CORBA_OperationDescription_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_OperationDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_OperationDescription_struct;
#define TC_CORBA_sequence_CORBA_OperationDescription ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_OperationDescription_struct)
#endif
extern CORBA_sequence_CORBA_OperationDescription* CORBA_sequence_CORBA_OperationDescription__alloc(void);
extern gpointer CORBA_sequence_CORBA_OperationDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_OpDescriptionSeq_defined)
#define _CORBA_OpDescriptionSeq_defined 1
typedef CORBA_sequence_CORBA_OperationDescription CORBA_OpDescriptionSeq;
#if !defined(TC_IMPL_TC_CORBA_OpDescriptionSeq_0)
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_0 'i'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_1 'n'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_2 't'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_3 'e'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_4 'r'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_5 'f'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_6 'a'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_7 'c'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_8 'e'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_9 '_'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_10 'r'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_11 'e'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_12 'p'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_13 'o'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_14 's'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_15 'i'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_16 't'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_17 'o'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_18 'r'
#define TC_IMPL_TC_CORBA_OpDescriptionSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_OpDescriptionSeq_struct;
#define TC_CORBA_OpDescriptionSeq ((CORBA_TypeCode)&TC_CORBA_OpDescriptionSeq_struct)
#endif
extern CORBA_OpDescriptionSeq* CORBA_OpDescriptionSeq__alloc(void);
extern gpointer CORBA_OpDescriptionSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_AttributeDescription) && !defined(_CORBA_sequence_CORBA_AttributeDescription_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_AttributeDescription 1
#define _CORBA_sequence_CORBA_AttributeDescription_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_2 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_3 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_4 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_5 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_6 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_7 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_8 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_9 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_11 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_12 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_13 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_14 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_15 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_16 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_17 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_18 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_AttributeDescription_19 'y'
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_AttributeDescription* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_AttributeDescription;
CORBA_AttributeDescription *CORBA_sequence_CORBA_AttributeDescription_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_2 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_3 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_4 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_5 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_6 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_7 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_8 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_9 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_11 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_12 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_13 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_14 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_15 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_16 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_17 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_18 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_AttributeDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_AttributeDescription_struct;
#define TC_CORBA_sequence_CORBA_AttributeDescription ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_AttributeDescription_struct)
#endif
extern CORBA_sequence_CORBA_AttributeDescription* CORBA_sequence_CORBA_AttributeDescription__alloc(void);
extern gpointer CORBA_sequence_CORBA_AttributeDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#if !defined(_CORBA_AttrDescriptionSeq_defined)
#define _CORBA_AttrDescriptionSeq_defined 1
typedef CORBA_sequence_CORBA_AttributeDescription CORBA_AttrDescriptionSeq;
#if !defined(TC_IMPL_TC_CORBA_AttrDescriptionSeq_0)
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_0 'i'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_1 'n'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_2 't'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_3 'e'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_4 'r'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_5 'f'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_6 'a'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_7 'c'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_8 'e'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_9 '_'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_10 'r'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_11 'e'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_12 'p'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_13 'o'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_14 's'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_15 'i'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_16 't'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_17 'o'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_18 'r'
#define TC_IMPL_TC_CORBA_AttrDescriptionSeq_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_AttrDescriptionSeq_struct;
#define TC_CORBA_AttrDescriptionSeq ((CORBA_TypeCode)&TC_CORBA_AttrDescriptionSeq_struct)
#endif
extern CORBA_AttrDescriptionSeq* CORBA_AttrDescriptionSeq__alloc(void);
extern gpointer CORBA_AttrDescriptionSeq__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_InterfaceDef) && !defined(_CORBA_InterfaceDef_defined)
#define ORBIT_DECL_CORBA_InterfaceDef 1
#define _CORBA_InterfaceDef_defined 1
#define CORBA_InterfaceDef__free CORBA_Object__free
typedef CORBA_Object CORBA_InterfaceDef;
extern CORBA_unsigned_long CORBA_InterfaceDef__classid;
#if !defined(TC_IMPL_TC_CORBA_InterfaceDef_0)
#define TC_IMPL_TC_CORBA_InterfaceDef_0 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_1 'n'
#define TC_IMPL_TC_CORBA_InterfaceDef_2 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_3 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_4 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_5 'f'
#define TC_IMPL_TC_CORBA_InterfaceDef_6 'a'
#define TC_IMPL_TC_CORBA_InterfaceDef_7 'c'
#define TC_IMPL_TC_CORBA_InterfaceDef_8 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_9 '_'
#define TC_IMPL_TC_CORBA_InterfaceDef_10 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_11 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_12 'p'
#define TC_IMPL_TC_CORBA_InterfaceDef_13 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_14 's'
#define TC_IMPL_TC_CORBA_InterfaceDef_15 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_16 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_17 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_18 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_InterfaceDef_struct;
#define TC_CORBA_InterfaceDef ((CORBA_TypeCode)&TC_CORBA_InterfaceDef_struct)
#endif
#endif
#if !defined(_CORBA_InterfaceDef_FullInterfaceDescription_defined)
#define _CORBA_InterfaceDef_FullInterfaceDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_OpDescriptionSeq operations;
CORBA_AttrDescriptionSeq attributes;
CORBA_RepositoryIdSeq base_interfaces;
CORBA_TypeCode type;
} CORBA_InterfaceDef_FullInterfaceDescription;

#if !defined(TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_0)
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_0 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_1 'n'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_2 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_3 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_4 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_5 'f'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_6 'a'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_7 'c'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_8 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_9 '_'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_10 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_11 'e'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_12 'p'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_13 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_14 's'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_15 'i'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_16 't'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_17 'o'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_18 'r'
#define TC_IMPL_TC_CORBA_InterfaceDef_FullInterfaceDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_InterfaceDef_FullInterfaceDescription_struct;
#define TC_CORBA_InterfaceDef_FullInterfaceDescription ((CORBA_TypeCode)&TC_CORBA_InterfaceDef_FullInterfaceDescription_struct)
#endif
extern CORBA_InterfaceDef_FullInterfaceDescription* CORBA_InterfaceDef_FullInterfaceDescription__alloc(void);
extern gpointer CORBA_InterfaceDef_FullInterfaceDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif
#if !defined(_CORBA_InterfaceDescription_defined)
#define _CORBA_InterfaceDescription_defined 1
typedef struct {
CORBA_Identifier name;
CORBA_RepositoryId id;
CORBA_RepositoryId defined_in;
CORBA_VersionSpec version;
CORBA_RepositoryIdSeq base_interfaces;
} CORBA_InterfaceDescription;

#if !defined(TC_IMPL_TC_CORBA_InterfaceDescription_0)
#define TC_IMPL_TC_CORBA_InterfaceDescription_0 'i'
#define TC_IMPL_TC_CORBA_InterfaceDescription_1 'n'
#define TC_IMPL_TC_CORBA_InterfaceDescription_2 't'
#define TC_IMPL_TC_CORBA_InterfaceDescription_3 'e'
#define TC_IMPL_TC_CORBA_InterfaceDescription_4 'r'
#define TC_IMPL_TC_CORBA_InterfaceDescription_5 'f'
#define TC_IMPL_TC_CORBA_InterfaceDescription_6 'a'
#define TC_IMPL_TC_CORBA_InterfaceDescription_7 'c'
#define TC_IMPL_TC_CORBA_InterfaceDescription_8 'e'
#define TC_IMPL_TC_CORBA_InterfaceDescription_9 '_'
#define TC_IMPL_TC_CORBA_InterfaceDescription_10 'r'
#define TC_IMPL_TC_CORBA_InterfaceDescription_11 'e'
#define TC_IMPL_TC_CORBA_InterfaceDescription_12 'p'
#define TC_IMPL_TC_CORBA_InterfaceDescription_13 'o'
#define TC_IMPL_TC_CORBA_InterfaceDescription_14 's'
#define TC_IMPL_TC_CORBA_InterfaceDescription_15 'i'
#define TC_IMPL_TC_CORBA_InterfaceDescription_16 't'
#define TC_IMPL_TC_CORBA_InterfaceDescription_17 'o'
#define TC_IMPL_TC_CORBA_InterfaceDescription_18 'r'
#define TC_IMPL_TC_CORBA_InterfaceDescription_19 'y'
extern const struct CORBA_TypeCode_struct TC_CORBA_InterfaceDescription_struct;
#define TC_CORBA_InterfaceDescription ((CORBA_TypeCode)&TC_CORBA_InterfaceDescription_struct)
#endif
extern CORBA_InterfaceDescription* CORBA_InterfaceDescription__alloc(void);
extern gpointer CORBA_InterfaceDescription__free(gpointer mem, gpointer dat, CORBA_boolean free_strings); /* ORBit internal use */
#endif

/** POA structures **/
typedef struct {
  void *_private;
CORBA_DefinitionKind (*_get_def_kind)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*destroy)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_CORBA_IRObject__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
} POA_CORBA_IRObject__vepv;
typedef struct {
  void *_private;
  POA_CORBA_IRObject__vepv *vepv;
} POA_CORBA_IRObject;
extern void POA_CORBA_IRObject__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_IRObject__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_RepositoryId (*_get_id)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_id)(PortableServer_Servant _servant, const CORBA_RepositoryId value, CORBA_Environment *ev);
CORBA_Identifier (*_get_name)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_name)(PortableServer_Servant _servant, const CORBA_Identifier value, CORBA_Environment *ev);
CORBA_VersionSpec (*_get_version)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_version)(PortableServer_Servant _servant, const CORBA_VersionSpec value, CORBA_Environment *ev);
CORBA_Container (*_get_defined_in)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_ScopedName (*_get_absolute_name)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_Repository (*_get_containing_repository)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_Contained_Description* (*describe)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*move)(PortableServer_Servant _servant, const CORBA_Container new_container, const CORBA_Identifier new_name, const CORBA_VersionSpec new_version, CORBA_Environment *ev);
} POA_CORBA_Contained__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
} POA_CORBA_Contained__vepv;
typedef struct {
  void *_private;
  POA_CORBA_Contained__vepv *vepv;
} POA_CORBA_Contained;
extern void POA_CORBA_Contained__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_Contained__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_Contained (*lookup)(PortableServer_Servant _servant, const CORBA_ScopedName search_name, CORBA_Environment *ev);
CORBA_ContainedSeq* (*contents)(PortableServer_Servant _servant, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev);
CORBA_ContainedSeq* (*lookup_name)(PortableServer_Servant _servant, const CORBA_Identifier search_name, const CORBA_long levels_to_search, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev);
CORBA_Container_DescriptionSeq* (*describe_contents)(PortableServer_Servant _servant, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, const CORBA_long max_returned_objs, CORBA_Environment *ev);
CORBA_ModuleDef (*create_module)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, CORBA_Environment *ev);
CORBA_ConstantDef (*create_constant)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_any* value, CORBA_Environment *ev);
CORBA_StructDef (*create_struct)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev);
CORBA_UnionDef (*create_union)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType discriminator_type, const CORBA_UnionMemberSeq* members, CORBA_Environment *ev);
CORBA_EnumDef (*create_enum)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_EnumMemberSeq* members, CORBA_Environment *ev);
CORBA_AliasDef (*create_alias)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType original_type, CORBA_Environment *ev);
CORBA_InterfaceDef (*create_interface)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_InterfaceDefSeq* base_interfaces, CORBA_Environment *ev);
CORBA_ExceptionDef (*create_exception)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev);
} POA_CORBA_Container__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
} POA_CORBA_Container__vepv;
typedef struct {
  void *_private;
  POA_CORBA_Container__vepv *vepv;
} POA_CORBA_Container;
extern void POA_CORBA_Container__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_Container__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_CORBA_IDLType__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
} POA_CORBA_IDLType__vepv;
typedef struct {
  void *_private;
  POA_CORBA_IDLType__vepv *vepv;
} POA_CORBA_IDLType;
extern void POA_CORBA_IDLType__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_IDLType__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_Contained (*lookup_id)(PortableServer_Servant _servant, const CORBA_RepositoryId search_id, CORBA_Environment *ev);
CORBA_PrimitiveDef (*get_primitive)(PortableServer_Servant _servant, const CORBA_PrimitiveKind kind, CORBA_Environment *ev);
CORBA_StringDef (*create_string)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, CORBA_Environment *ev);
CORBA_WstringDef (*create_wstring)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, CORBA_Environment *ev);
CORBA_SequenceDef (*create_sequence)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, const CORBA_IDLType element_type, CORBA_Environment *ev);
CORBA_ArrayDef (*create_array)(PortableServer_Servant _servant, const CORBA_unsigned_long length, const CORBA_IDLType element_type, CORBA_Environment *ev);
CORBA_FixedDef (*create_fixed)(PortableServer_Servant _servant, const CORBA_unsigned_short digits, const CORBA_short scale, CORBA_Environment *ev);
} POA_CORBA_Repository__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_Repository__epv *CORBA_Repository_epv;
} POA_CORBA_Repository__vepv;
typedef struct {
  void *_private;
  POA_CORBA_Repository__vepv *vepv;
} POA_CORBA_Repository;
extern void POA_CORBA_Repository__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_Repository__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
} POA_CORBA_ModuleDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_ModuleDef__epv *CORBA_ModuleDef_epv;
} POA_CORBA_ModuleDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_ModuleDef__vepv *vepv;
} POA_CORBA_ModuleDef;
extern void POA_CORBA_ModuleDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_ModuleDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_any* (*_get_value)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_value)(PortableServer_Servant _servant, const CORBA_any* value, CORBA_Environment *ev);
} POA_CORBA_ConstantDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_ConstantDef__epv *CORBA_ConstantDef_epv;
} POA_CORBA_ConstantDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_ConstantDef__vepv *vepv;
} POA_CORBA_ConstantDef;
extern void POA_CORBA_ConstantDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_ConstantDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
} POA_CORBA_TypedefDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_TypedefDef__epv *CORBA_TypedefDef_epv;
} POA_CORBA_TypedefDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_TypedefDef__vepv *vepv;
} POA_CORBA_TypedefDef;
extern void POA_CORBA_TypedefDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_TypedefDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_StructMemberSeq* (*_get_members)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_members)(PortableServer_Servant _servant, const CORBA_StructMemberSeq* value, CORBA_Environment *ev);
} POA_CORBA_StructDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_TypedefDef__epv *CORBA_TypedefDef_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_StructDef__epv *CORBA_StructDef_epv;
} POA_CORBA_StructDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_StructDef__vepv *vepv;
} POA_CORBA_StructDef;
extern void POA_CORBA_StructDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_StructDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_discriminator_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_discriminator_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_discriminator_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_UnionMemberSeq* (*_get_members)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_members)(PortableServer_Servant _servant, const CORBA_UnionMemberSeq* value, CORBA_Environment *ev);
} POA_CORBA_UnionDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_TypedefDef__epv *CORBA_TypedefDef_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_UnionDef__epv *CORBA_UnionDef_epv;
} POA_CORBA_UnionDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_UnionDef__vepv *vepv;
} POA_CORBA_UnionDef;
extern void POA_CORBA_UnionDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_UnionDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_EnumMemberSeq* (*_get_members)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_members)(PortableServer_Servant _servant, const CORBA_EnumMemberSeq* value, CORBA_Environment *ev);
} POA_CORBA_EnumDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_TypedefDef__epv *CORBA_TypedefDef_epv;
  POA_CORBA_EnumDef__epv *CORBA_EnumDef_epv;
} POA_CORBA_EnumDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_EnumDef__vepv *vepv;
} POA_CORBA_EnumDef;
extern void POA_CORBA_EnumDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_EnumDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_IDLType (*_get_original_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_original_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
} POA_CORBA_AliasDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_TypedefDef__epv *CORBA_TypedefDef_epv;
  POA_CORBA_AliasDef__epv *CORBA_AliasDef_epv;
} POA_CORBA_AliasDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_AliasDef__vepv *vepv;
} POA_CORBA_AliasDef;
extern void POA_CORBA_AliasDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_AliasDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_PrimitiveKind (*_get_kind)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_CORBA_PrimitiveDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_PrimitiveDef__epv *CORBA_PrimitiveDef_epv;
} POA_CORBA_PrimitiveDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_PrimitiveDef__vepv *vepv;
} POA_CORBA_PrimitiveDef;
extern void POA_CORBA_PrimitiveDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_PrimitiveDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_unsigned_long (*_get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev);
} POA_CORBA_StringDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_StringDef__epv *CORBA_StringDef_epv;
} POA_CORBA_StringDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_StringDef__vepv *vepv;
} POA_CORBA_StringDef;
extern void POA_CORBA_StringDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_StringDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_unsigned_long (*_get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev);
} POA_CORBA_WstringDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_WstringDef__epv *CORBA_WstringDef_epv;
} POA_CORBA_WstringDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_WstringDef__vepv *vepv;
} POA_CORBA_WstringDef;
extern void POA_CORBA_WstringDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_WstringDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_unsigned_short (*_get_digits)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_digits)(PortableServer_Servant _servant, const CORBA_unsigned_short value, CORBA_Environment *ev);
CORBA_short (*_get_scale)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_scale)(PortableServer_Servant _servant, const CORBA_short value, CORBA_Environment *ev);
} POA_CORBA_FixedDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_FixedDef__epv *CORBA_FixedDef_epv;
} POA_CORBA_FixedDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_FixedDef__vepv *vepv;
} POA_CORBA_FixedDef;
extern void POA_CORBA_FixedDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_FixedDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_unsigned_long (*_get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev);
CORBA_TypeCode (*_get_element_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_element_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_element_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
} POA_CORBA_SequenceDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_SequenceDef__epv *CORBA_SequenceDef_epv;
} POA_CORBA_SequenceDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_SequenceDef__vepv *vepv;
} POA_CORBA_SequenceDef;
extern void POA_CORBA_SequenceDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_SequenceDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_unsigned_long (*_get_length)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_length)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev);
CORBA_TypeCode (*_get_element_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_element_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_element_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
} POA_CORBA_ArrayDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_ArrayDef__epv *CORBA_ArrayDef_epv;
} POA_CORBA_ArrayDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_ArrayDef__vepv *vepv;
} POA_CORBA_ArrayDef;
extern void POA_CORBA_ArrayDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_ArrayDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_StructMemberSeq* (*_get_members)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_members)(PortableServer_Servant _servant, const CORBA_StructMemberSeq* value, CORBA_Environment *ev);
} POA_CORBA_ExceptionDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_ExceptionDef__epv *CORBA_ExceptionDef_epv;
} POA_CORBA_ExceptionDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_ExceptionDef__vepv *vepv;
} POA_CORBA_ExceptionDef;
extern void POA_CORBA_ExceptionDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_ExceptionDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_type)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_AttributeMode (*_get_mode)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_mode)(PortableServer_Servant _servant, const CORBA_AttributeMode value, CORBA_Environment *ev);
} POA_CORBA_AttributeDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_AttributeDef__epv *CORBA_AttributeDef_epv;
} POA_CORBA_AttributeDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_AttributeDef__vepv *vepv;
} POA_CORBA_AttributeDef;
extern void POA_CORBA_AttributeDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_AttributeDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_TypeCode (*_get_result)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_IDLType (*_get_result_def)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_result_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_ParDescriptionSeq* (*_get_params)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_params)(PortableServer_Servant _servant, const CORBA_ParDescriptionSeq* value, CORBA_Environment *ev);
CORBA_OperationMode (*_get_mode)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_mode)(PortableServer_Servant _servant, const CORBA_OperationMode value, CORBA_Environment *ev);
CORBA_ContextIdSeq* (*_get_contexts)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_contexts)(PortableServer_Servant _servant, const CORBA_ContextIdSeq* value, CORBA_Environment *ev);
CORBA_ExceptionDefSeq* (*_get_exceptions)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_exceptions)(PortableServer_Servant _servant, const CORBA_ExceptionDefSeq* value, CORBA_Environment *ev);
} POA_CORBA_OperationDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_OperationDef__epv *CORBA_OperationDef_epv;
} POA_CORBA_OperationDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_OperationDef__vepv *vepv;
} POA_CORBA_OperationDef;
extern void POA_CORBA_OperationDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_OperationDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);
typedef struct {
  void *_private;
CORBA_InterfaceDefSeq* (*_get_base_interfaces)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*_set_base_interfaces)(PortableServer_Servant _servant, const CORBA_InterfaceDefSeq* value, CORBA_Environment *ev);
CORBA_boolean (*is_a)(PortableServer_Servant _servant, const CORBA_RepositoryId interface_id, CORBA_Environment *ev);
CORBA_InterfaceDef_FullInterfaceDescription* (*describe_interface)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_AttributeDef (*create_attribute)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_AttributeMode mode, CORBA_Environment *ev);
CORBA_OperationDef (*create_operation)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType result, const CORBA_OperationMode mode, const CORBA_ParDescriptionSeq* params, const CORBA_ExceptionDefSeq* exceptions, const CORBA_ContextIdSeq* contexts, CORBA_Environment *ev);
} POA_CORBA_InterfaceDef__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CORBA_IRObject__epv *CORBA_IRObject_epv;
  POA_CORBA_Container__epv *CORBA_Container_epv;
  POA_CORBA_Contained__epv *CORBA_Contained_epv;
  POA_CORBA_IDLType__epv *CORBA_IDLType_epv;
  POA_CORBA_InterfaceDef__epv *CORBA_InterfaceDef_epv;
} POA_CORBA_InterfaceDef__vepv;
typedef struct {
  void *_private;
  POA_CORBA_InterfaceDef__vepv *vepv;
} POA_CORBA_InterfaceDef;
extern void POA_CORBA_InterfaceDef__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CORBA_InterfaceDef__fini(PortableServer_Servant servant, CORBA_Environment *ev);

/** prototypes **/
CORBA_DefinitionKind CORBA_IRObject__get_def_kind(CORBA_IRObject _obj, CORBA_Environment *ev);
void CORBA_IRObject_destroy(CORBA_IRObject _obj, CORBA_Environment *ev);
#define CORBA_Contained__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_Contained_destroy CORBA_IRObject_destroy
CORBA_RepositoryId CORBA_Contained__get_id(CORBA_Contained _obj, CORBA_Environment *ev);
void CORBA_Contained__set_id(CORBA_Contained _obj, const CORBA_RepositoryId value, CORBA_Environment *ev);
CORBA_Identifier CORBA_Contained__get_name(CORBA_Contained _obj, CORBA_Environment *ev);
void CORBA_Contained__set_name(CORBA_Contained _obj, const CORBA_Identifier value, CORBA_Environment *ev);
CORBA_VersionSpec CORBA_Contained__get_version(CORBA_Contained _obj, CORBA_Environment *ev);
void CORBA_Contained__set_version(CORBA_Contained _obj, const CORBA_VersionSpec value, CORBA_Environment *ev);
CORBA_Container CORBA_Contained__get_defined_in(CORBA_Contained _obj, CORBA_Environment *ev);
CORBA_ScopedName CORBA_Contained__get_absolute_name(CORBA_Contained _obj, CORBA_Environment *ev);
CORBA_Repository CORBA_Contained__get_containing_repository(CORBA_Contained _obj, CORBA_Environment *ev);
CORBA_Contained_Description* CORBA_Contained_describe(CORBA_Contained _obj, CORBA_Environment *ev);
void CORBA_Contained_move(CORBA_Contained _obj, const CORBA_Container new_container, const CORBA_Identifier new_name, const CORBA_VersionSpec new_version, CORBA_Environment *ev);
#define CORBA_Container__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_Container_destroy CORBA_IRObject_destroy
CORBA_Contained CORBA_Container_lookup(CORBA_Container _obj, const CORBA_ScopedName search_name, CORBA_Environment *ev);
CORBA_ContainedSeq* CORBA_Container_contents(CORBA_Container _obj, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev);
CORBA_ContainedSeq* CORBA_Container_lookup_name(CORBA_Container _obj, const CORBA_Identifier search_name, const CORBA_long levels_to_search, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev);
CORBA_Container_DescriptionSeq* CORBA_Container_describe_contents(CORBA_Container _obj, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, const CORBA_long max_returned_objs, CORBA_Environment *ev);
CORBA_ModuleDef CORBA_Container_create_module(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, CORBA_Environment *ev);
CORBA_ConstantDef CORBA_Container_create_constant(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_any* value, CORBA_Environment *ev);
CORBA_StructDef CORBA_Container_create_struct(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev);
CORBA_UnionDef CORBA_Container_create_union(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType discriminator_type, const CORBA_UnionMemberSeq* members, CORBA_Environment *ev);
CORBA_EnumDef CORBA_Container_create_enum(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_EnumMemberSeq* members, CORBA_Environment *ev);
CORBA_AliasDef CORBA_Container_create_alias(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType original_type, CORBA_Environment *ev);
CORBA_InterfaceDef CORBA_Container_create_interface(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_InterfaceDefSeq* base_interfaces, CORBA_Environment *ev);
CORBA_ExceptionDef CORBA_Container_create_exception(CORBA_Container _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev);
#define CORBA_IDLType__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_IDLType_destroy CORBA_IRObject_destroy
CORBA_TypeCode CORBA_IDLType__get_type(CORBA_IDLType _obj, CORBA_Environment *ev);
#define CORBA_Repository__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_Repository_destroy CORBA_IRObject_destroy
#define CORBA_Repository_lookup CORBA_Container_lookup
#define CORBA_Repository_contents CORBA_Container_contents
#define CORBA_Repository_lookup_name CORBA_Container_lookup_name
#define CORBA_Repository_describe_contents CORBA_Container_describe_contents
#define CORBA_Repository_create_module CORBA_Container_create_module
#define CORBA_Repository_create_constant CORBA_Container_create_constant
#define CORBA_Repository_create_struct CORBA_Container_create_struct
#define CORBA_Repository_create_union CORBA_Container_create_union
#define CORBA_Repository_create_enum CORBA_Container_create_enum
#define CORBA_Repository_create_alias CORBA_Container_create_alias
#define CORBA_Repository_create_interface CORBA_Container_create_interface
#define CORBA_Repository_create_exception CORBA_Container_create_exception
CORBA_Contained CORBA_Repository_lookup_id(CORBA_Repository _obj, const CORBA_RepositoryId search_id, CORBA_Environment *ev);
CORBA_PrimitiveDef CORBA_Repository_get_primitive(CORBA_Repository _obj, const CORBA_PrimitiveKind kind, CORBA_Environment *ev);
CORBA_StringDef CORBA_Repository_create_string(CORBA_Repository _obj, const CORBA_unsigned_long bound, CORBA_Environment *ev);
CORBA_WstringDef CORBA_Repository_create_wstring(CORBA_Repository _obj, const CORBA_unsigned_long bound, CORBA_Environment *ev);
CORBA_SequenceDef CORBA_Repository_create_sequence(CORBA_Repository _obj, const CORBA_unsigned_long bound, const CORBA_IDLType element_type, CORBA_Environment *ev);
CORBA_ArrayDef CORBA_Repository_create_array(CORBA_Repository _obj, const CORBA_unsigned_long length, const CORBA_IDLType element_type, CORBA_Environment *ev);
CORBA_FixedDef CORBA_Repository_create_fixed(CORBA_Repository _obj, const CORBA_unsigned_short digits, const CORBA_short scale, CORBA_Environment *ev);
#define CORBA_ModuleDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_ModuleDef_destroy CORBA_IRObject_destroy
#define CORBA_ModuleDef_lookup CORBA_Container_lookup
#define CORBA_ModuleDef_contents CORBA_Container_contents
#define CORBA_ModuleDef_lookup_name CORBA_Container_lookup_name
#define CORBA_ModuleDef_describe_contents CORBA_Container_describe_contents
#define CORBA_ModuleDef_create_module CORBA_Container_create_module
#define CORBA_ModuleDef_create_constant CORBA_Container_create_constant
#define CORBA_ModuleDef_create_struct CORBA_Container_create_struct
#define CORBA_ModuleDef_create_union CORBA_Container_create_union
#define CORBA_ModuleDef_create_enum CORBA_Container_create_enum
#define CORBA_ModuleDef_create_alias CORBA_Container_create_alias
#define CORBA_ModuleDef_create_interface CORBA_Container_create_interface
#define CORBA_ModuleDef_create_exception CORBA_Container_create_exception
#define CORBA_ModuleDef__get_id CORBA_Contained__get_id
#define CORBA_ModuleDef__set_id CORBA_Contained__set_id
#define CORBA_ModuleDef__get_name CORBA_Contained__get_name
#define CORBA_ModuleDef__set_name CORBA_Contained__set_name
#define CORBA_ModuleDef__get_version CORBA_Contained__get_version
#define CORBA_ModuleDef__set_version CORBA_Contained__set_version
#define CORBA_ModuleDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_ModuleDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_ModuleDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_ModuleDef_describe CORBA_Contained_describe
#define CORBA_ModuleDef_move CORBA_Contained_move
#define CORBA_ConstantDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_ConstantDef_destroy CORBA_IRObject_destroy
#define CORBA_ConstantDef__get_id CORBA_Contained__get_id
#define CORBA_ConstantDef__set_id CORBA_Contained__set_id
#define CORBA_ConstantDef__get_name CORBA_Contained__get_name
#define CORBA_ConstantDef__set_name CORBA_Contained__set_name
#define CORBA_ConstantDef__get_version CORBA_Contained__get_version
#define CORBA_ConstantDef__set_version CORBA_Contained__set_version
#define CORBA_ConstantDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_ConstantDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_ConstantDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_ConstantDef_describe CORBA_Contained_describe
#define CORBA_ConstantDef_move CORBA_Contained_move
CORBA_TypeCode CORBA_ConstantDef__get_type(CORBA_ConstantDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_ConstantDef__get_type_def(CORBA_ConstantDef _obj, CORBA_Environment *ev);
void CORBA_ConstantDef__set_type_def(CORBA_ConstantDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_any* CORBA_ConstantDef__get_value(CORBA_ConstantDef _obj, CORBA_Environment *ev);
void CORBA_ConstantDef__set_value(CORBA_ConstantDef _obj, const CORBA_any* value, CORBA_Environment *ev);
#define CORBA_TypedefDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_TypedefDef_destroy CORBA_IRObject_destroy
#define CORBA_TypedefDef__get_id CORBA_Contained__get_id
#define CORBA_TypedefDef__set_id CORBA_Contained__set_id
#define CORBA_TypedefDef__get_name CORBA_Contained__get_name
#define CORBA_TypedefDef__set_name CORBA_Contained__set_name
#define CORBA_TypedefDef__get_version CORBA_Contained__get_version
#define CORBA_TypedefDef__set_version CORBA_Contained__set_version
#define CORBA_TypedefDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_TypedefDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_TypedefDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_TypedefDef_describe CORBA_Contained_describe
#define CORBA_TypedefDef_move CORBA_Contained_move
#define CORBA_TypedefDef__get_type CORBA_IDLType__get_type
#define CORBA_StructDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_StructDef_destroy CORBA_IRObject_destroy
#define CORBA_StructDef__get_id CORBA_Contained__get_id
#define CORBA_StructDef__set_id CORBA_Contained__set_id
#define CORBA_StructDef__get_name CORBA_Contained__get_name
#define CORBA_StructDef__set_name CORBA_Contained__set_name
#define CORBA_StructDef__get_version CORBA_Contained__get_version
#define CORBA_StructDef__set_version CORBA_Contained__set_version
#define CORBA_StructDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_StructDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_StructDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_StructDef_describe CORBA_Contained_describe
#define CORBA_StructDef_move CORBA_Contained_move
#define CORBA_StructDef__get_type CORBA_IDLType__get_type
#define CORBA_StructDef_lookup CORBA_Container_lookup
#define CORBA_StructDef_contents CORBA_Container_contents
#define CORBA_StructDef_lookup_name CORBA_Container_lookup_name
#define CORBA_StructDef_describe_contents CORBA_Container_describe_contents
#define CORBA_StructDef_create_module CORBA_Container_create_module
#define CORBA_StructDef_create_constant CORBA_Container_create_constant
#define CORBA_StructDef_create_struct CORBA_Container_create_struct
#define CORBA_StructDef_create_union CORBA_Container_create_union
#define CORBA_StructDef_create_enum CORBA_Container_create_enum
#define CORBA_StructDef_create_alias CORBA_Container_create_alias
#define CORBA_StructDef_create_interface CORBA_Container_create_interface
#define CORBA_StructDef_create_exception CORBA_Container_create_exception
CORBA_StructMemberSeq* CORBA_StructDef__get_members(CORBA_StructDef _obj, CORBA_Environment *ev);
void CORBA_StructDef__set_members(CORBA_StructDef _obj, const CORBA_StructMemberSeq* value, CORBA_Environment *ev);
#define CORBA_UnionDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_UnionDef_destroy CORBA_IRObject_destroy
#define CORBA_UnionDef__get_id CORBA_Contained__get_id
#define CORBA_UnionDef__set_id CORBA_Contained__set_id
#define CORBA_UnionDef__get_name CORBA_Contained__get_name
#define CORBA_UnionDef__set_name CORBA_Contained__set_name
#define CORBA_UnionDef__get_version CORBA_Contained__get_version
#define CORBA_UnionDef__set_version CORBA_Contained__set_version
#define CORBA_UnionDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_UnionDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_UnionDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_UnionDef_describe CORBA_Contained_describe
#define CORBA_UnionDef_move CORBA_Contained_move
#define CORBA_UnionDef__get_type CORBA_IDLType__get_type
#define CORBA_UnionDef_lookup CORBA_Container_lookup
#define CORBA_UnionDef_contents CORBA_Container_contents
#define CORBA_UnionDef_lookup_name CORBA_Container_lookup_name
#define CORBA_UnionDef_describe_contents CORBA_Container_describe_contents
#define CORBA_UnionDef_create_module CORBA_Container_create_module
#define CORBA_UnionDef_create_constant CORBA_Container_create_constant
#define CORBA_UnionDef_create_struct CORBA_Container_create_struct
#define CORBA_UnionDef_create_union CORBA_Container_create_union
#define CORBA_UnionDef_create_enum CORBA_Container_create_enum
#define CORBA_UnionDef_create_alias CORBA_Container_create_alias
#define CORBA_UnionDef_create_interface CORBA_Container_create_interface
#define CORBA_UnionDef_create_exception CORBA_Container_create_exception
CORBA_TypeCode CORBA_UnionDef__get_discriminator_type(CORBA_UnionDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_UnionDef__get_discriminator_type_def(CORBA_UnionDef _obj, CORBA_Environment *ev);
void CORBA_UnionDef__set_discriminator_type_def(CORBA_UnionDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_UnionMemberSeq* CORBA_UnionDef__get_members(CORBA_UnionDef _obj, CORBA_Environment *ev);
void CORBA_UnionDef__set_members(CORBA_UnionDef _obj, const CORBA_UnionMemberSeq* value, CORBA_Environment *ev);
#define CORBA_EnumDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_EnumDef_destroy CORBA_IRObject_destroy
#define CORBA_EnumDef__get_id CORBA_Contained__get_id
#define CORBA_EnumDef__set_id CORBA_Contained__set_id
#define CORBA_EnumDef__get_name CORBA_Contained__get_name
#define CORBA_EnumDef__set_name CORBA_Contained__set_name
#define CORBA_EnumDef__get_version CORBA_Contained__get_version
#define CORBA_EnumDef__set_version CORBA_Contained__set_version
#define CORBA_EnumDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_EnumDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_EnumDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_EnumDef_describe CORBA_Contained_describe
#define CORBA_EnumDef_move CORBA_Contained_move
#define CORBA_EnumDef__get_type CORBA_IDLType__get_type
CORBA_EnumMemberSeq* CORBA_EnumDef__get_members(CORBA_EnumDef _obj, CORBA_Environment *ev);
void CORBA_EnumDef__set_members(CORBA_EnumDef _obj, const CORBA_EnumMemberSeq* value, CORBA_Environment *ev);
#define CORBA_AliasDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_AliasDef_destroy CORBA_IRObject_destroy
#define CORBA_AliasDef__get_id CORBA_Contained__get_id
#define CORBA_AliasDef__set_id CORBA_Contained__set_id
#define CORBA_AliasDef__get_name CORBA_Contained__get_name
#define CORBA_AliasDef__set_name CORBA_Contained__set_name
#define CORBA_AliasDef__get_version CORBA_Contained__get_version
#define CORBA_AliasDef__set_version CORBA_Contained__set_version
#define CORBA_AliasDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_AliasDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_AliasDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_AliasDef_describe CORBA_Contained_describe
#define CORBA_AliasDef_move CORBA_Contained_move
#define CORBA_AliasDef__get_type CORBA_IDLType__get_type
CORBA_IDLType CORBA_AliasDef__get_original_type_def(CORBA_AliasDef _obj, CORBA_Environment *ev);
void CORBA_AliasDef__set_original_type_def(CORBA_AliasDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
#define CORBA_PrimitiveDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_PrimitiveDef_destroy CORBA_IRObject_destroy
#define CORBA_PrimitiveDef__get_type CORBA_IDLType__get_type
CORBA_PrimitiveKind CORBA_PrimitiveDef__get_kind(CORBA_PrimitiveDef _obj, CORBA_Environment *ev);
#define CORBA_StringDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_StringDef_destroy CORBA_IRObject_destroy
#define CORBA_StringDef__get_type CORBA_IDLType__get_type
CORBA_unsigned_long CORBA_StringDef__get_bound(CORBA_StringDef _obj, CORBA_Environment *ev);
void CORBA_StringDef__set_bound(CORBA_StringDef _obj, const CORBA_unsigned_long value, CORBA_Environment *ev);
#define CORBA_WstringDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_WstringDef_destroy CORBA_IRObject_destroy
#define CORBA_WstringDef__get_type CORBA_IDLType__get_type
CORBA_unsigned_long CORBA_WstringDef__get_bound(CORBA_WstringDef _obj, CORBA_Environment *ev);
void CORBA_WstringDef__set_bound(CORBA_WstringDef _obj, const CORBA_unsigned_long value, CORBA_Environment *ev);
#define CORBA_FixedDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_FixedDef_destroy CORBA_IRObject_destroy
#define CORBA_FixedDef__get_type CORBA_IDLType__get_type
CORBA_unsigned_short CORBA_FixedDef__get_digits(CORBA_FixedDef _obj, CORBA_Environment *ev);
void CORBA_FixedDef__set_digits(CORBA_FixedDef _obj, const CORBA_unsigned_short value, CORBA_Environment *ev);
CORBA_short CORBA_FixedDef__get_scale(CORBA_FixedDef _obj, CORBA_Environment *ev);
void CORBA_FixedDef__set_scale(CORBA_FixedDef _obj, const CORBA_short value, CORBA_Environment *ev);
#define CORBA_SequenceDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_SequenceDef_destroy CORBA_IRObject_destroy
#define CORBA_SequenceDef__get_type CORBA_IDLType__get_type
CORBA_unsigned_long CORBA_SequenceDef__get_bound(CORBA_SequenceDef _obj, CORBA_Environment *ev);
void CORBA_SequenceDef__set_bound(CORBA_SequenceDef _obj, const CORBA_unsigned_long value, CORBA_Environment *ev);
CORBA_TypeCode CORBA_SequenceDef__get_element_type(CORBA_SequenceDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_SequenceDef__get_element_type_def(CORBA_SequenceDef _obj, CORBA_Environment *ev);
void CORBA_SequenceDef__set_element_type_def(CORBA_SequenceDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
#define CORBA_ArrayDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_ArrayDef_destroy CORBA_IRObject_destroy
#define CORBA_ArrayDef__get_type CORBA_IDLType__get_type
CORBA_unsigned_long CORBA_ArrayDef__get_length(CORBA_ArrayDef _obj, CORBA_Environment *ev);
void CORBA_ArrayDef__set_length(CORBA_ArrayDef _obj, const CORBA_unsigned_long value, CORBA_Environment *ev);
CORBA_TypeCode CORBA_ArrayDef__get_element_type(CORBA_ArrayDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_ArrayDef__get_element_type_def(CORBA_ArrayDef _obj, CORBA_Environment *ev);
void CORBA_ArrayDef__set_element_type_def(CORBA_ArrayDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
#define CORBA_ExceptionDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_ExceptionDef_destroy CORBA_IRObject_destroy
#define CORBA_ExceptionDef__get_id CORBA_Contained__get_id
#define CORBA_ExceptionDef__set_id CORBA_Contained__set_id
#define CORBA_ExceptionDef__get_name CORBA_Contained__get_name
#define CORBA_ExceptionDef__set_name CORBA_Contained__set_name
#define CORBA_ExceptionDef__get_version CORBA_Contained__get_version
#define CORBA_ExceptionDef__set_version CORBA_Contained__set_version
#define CORBA_ExceptionDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_ExceptionDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_ExceptionDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_ExceptionDef_describe CORBA_Contained_describe
#define CORBA_ExceptionDef_move CORBA_Contained_move
#define CORBA_ExceptionDef_lookup CORBA_Container_lookup
#define CORBA_ExceptionDef_contents CORBA_Container_contents
#define CORBA_ExceptionDef_lookup_name CORBA_Container_lookup_name
#define CORBA_ExceptionDef_describe_contents CORBA_Container_describe_contents
#define CORBA_ExceptionDef_create_module CORBA_Container_create_module
#define CORBA_ExceptionDef_create_constant CORBA_Container_create_constant
#define CORBA_ExceptionDef_create_struct CORBA_Container_create_struct
#define CORBA_ExceptionDef_create_union CORBA_Container_create_union
#define CORBA_ExceptionDef_create_enum CORBA_Container_create_enum
#define CORBA_ExceptionDef_create_alias CORBA_Container_create_alias
#define CORBA_ExceptionDef_create_interface CORBA_Container_create_interface
#define CORBA_ExceptionDef_create_exception CORBA_Container_create_exception
CORBA_TypeCode CORBA_ExceptionDef__get_type(CORBA_ExceptionDef _obj, CORBA_Environment *ev);
CORBA_StructMemberSeq* CORBA_ExceptionDef__get_members(CORBA_ExceptionDef _obj, CORBA_Environment *ev);
void CORBA_ExceptionDef__set_members(CORBA_ExceptionDef _obj, const CORBA_StructMemberSeq* value, CORBA_Environment *ev);
#define CORBA_AttributeDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_AttributeDef_destroy CORBA_IRObject_destroy
#define CORBA_AttributeDef__get_id CORBA_Contained__get_id
#define CORBA_AttributeDef__set_id CORBA_Contained__set_id
#define CORBA_AttributeDef__get_name CORBA_Contained__get_name
#define CORBA_AttributeDef__set_name CORBA_Contained__set_name
#define CORBA_AttributeDef__get_version CORBA_Contained__get_version
#define CORBA_AttributeDef__set_version CORBA_Contained__set_version
#define CORBA_AttributeDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_AttributeDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_AttributeDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_AttributeDef_describe CORBA_Contained_describe
#define CORBA_AttributeDef_move CORBA_Contained_move
CORBA_TypeCode CORBA_AttributeDef__get_type(CORBA_AttributeDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_AttributeDef__get_type_def(CORBA_AttributeDef _obj, CORBA_Environment *ev);
void CORBA_AttributeDef__set_type_def(CORBA_AttributeDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_AttributeMode CORBA_AttributeDef__get_mode(CORBA_AttributeDef _obj, CORBA_Environment *ev);
void CORBA_AttributeDef__set_mode(CORBA_AttributeDef _obj, const CORBA_AttributeMode value, CORBA_Environment *ev);
#define CORBA_OperationDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_OperationDef_destroy CORBA_IRObject_destroy
#define CORBA_OperationDef__get_id CORBA_Contained__get_id
#define CORBA_OperationDef__set_id CORBA_Contained__set_id
#define CORBA_OperationDef__get_name CORBA_Contained__get_name
#define CORBA_OperationDef__set_name CORBA_Contained__set_name
#define CORBA_OperationDef__get_version CORBA_Contained__get_version
#define CORBA_OperationDef__set_version CORBA_Contained__set_version
#define CORBA_OperationDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_OperationDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_OperationDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_OperationDef_describe CORBA_Contained_describe
#define CORBA_OperationDef_move CORBA_Contained_move
CORBA_TypeCode CORBA_OperationDef__get_result(CORBA_OperationDef _obj, CORBA_Environment *ev);
CORBA_IDLType CORBA_OperationDef__get_result_def(CORBA_OperationDef _obj, CORBA_Environment *ev);
void CORBA_OperationDef__set_result_def(CORBA_OperationDef _obj, const CORBA_IDLType value, CORBA_Environment *ev);
CORBA_ParDescriptionSeq* CORBA_OperationDef__get_params(CORBA_OperationDef _obj, CORBA_Environment *ev);
void CORBA_OperationDef__set_params(CORBA_OperationDef _obj, const CORBA_ParDescriptionSeq* value, CORBA_Environment *ev);
CORBA_OperationMode CORBA_OperationDef__get_mode(CORBA_OperationDef _obj, CORBA_Environment *ev);
void CORBA_OperationDef__set_mode(CORBA_OperationDef _obj, const CORBA_OperationMode value, CORBA_Environment *ev);
CORBA_ContextIdSeq* CORBA_OperationDef__get_contexts(CORBA_OperationDef _obj, CORBA_Environment *ev);
void CORBA_OperationDef__set_contexts(CORBA_OperationDef _obj, const CORBA_ContextIdSeq* value, CORBA_Environment *ev);
CORBA_ExceptionDefSeq* CORBA_OperationDef__get_exceptions(CORBA_OperationDef _obj, CORBA_Environment *ev);
void CORBA_OperationDef__set_exceptions(CORBA_OperationDef _obj, const CORBA_ExceptionDefSeq* value, CORBA_Environment *ev);
#define CORBA_InterfaceDef__get_def_kind CORBA_IRObject__get_def_kind
#define CORBA_InterfaceDef_destroy CORBA_IRObject_destroy
#define CORBA_InterfaceDef_lookup CORBA_Container_lookup
#define CORBA_InterfaceDef_contents CORBA_Container_contents
#define CORBA_InterfaceDef_lookup_name CORBA_Container_lookup_name
#define CORBA_InterfaceDef_describe_contents CORBA_Container_describe_contents
#define CORBA_InterfaceDef_create_module CORBA_Container_create_module
#define CORBA_InterfaceDef_create_constant CORBA_Container_create_constant
#define CORBA_InterfaceDef_create_struct CORBA_Container_create_struct
#define CORBA_InterfaceDef_create_union CORBA_Container_create_union
#define CORBA_InterfaceDef_create_enum CORBA_Container_create_enum
#define CORBA_InterfaceDef_create_alias CORBA_Container_create_alias
#define CORBA_InterfaceDef_create_interface CORBA_Container_create_interface
#define CORBA_InterfaceDef_create_exception CORBA_Container_create_exception
#define CORBA_InterfaceDef__get_id CORBA_Contained__get_id
#define CORBA_InterfaceDef__set_id CORBA_Contained__set_id
#define CORBA_InterfaceDef__get_name CORBA_Contained__get_name
#define CORBA_InterfaceDef__set_name CORBA_Contained__set_name
#define CORBA_InterfaceDef__get_version CORBA_Contained__get_version
#define CORBA_InterfaceDef__set_version CORBA_Contained__set_version
#define CORBA_InterfaceDef__get_defined_in CORBA_Contained__get_defined_in
#define CORBA_InterfaceDef__get_absolute_name CORBA_Contained__get_absolute_name
#define CORBA_InterfaceDef__get_containing_repository CORBA_Contained__get_containing_repository
#define CORBA_InterfaceDef_describe CORBA_Contained_describe
#define CORBA_InterfaceDef_move CORBA_Contained_move
#define CORBA_InterfaceDef__get_type CORBA_IDLType__get_type
CORBA_InterfaceDefSeq* CORBA_InterfaceDef__get_base_interfaces(CORBA_InterfaceDef _obj, CORBA_Environment *ev);
void CORBA_InterfaceDef__set_base_interfaces(CORBA_InterfaceDef _obj, const CORBA_InterfaceDefSeq* value, CORBA_Environment *ev);
CORBA_boolean CORBA_InterfaceDef_is_a(CORBA_InterfaceDef _obj, const CORBA_RepositoryId interface_id, CORBA_Environment *ev);
CORBA_InterfaceDef_FullInterfaceDescription* CORBA_InterfaceDef_describe_interface(CORBA_InterfaceDef _obj, CORBA_Environment *ev);
CORBA_AttributeDef CORBA_InterfaceDef_create_attribute(CORBA_InterfaceDef _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_AttributeMode mode, CORBA_Environment *ev);
CORBA_OperationDef CORBA_InterfaceDef_create_operation(CORBA_InterfaceDef _obj, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType result, const CORBA_OperationMode mode, const CORBA_ParDescriptionSeq* params, const CORBA_ExceptionDefSeq* exceptions, const CORBA_ContextIdSeq* contexts, CORBA_Environment *ev);

void _ORBIT_skel_CORBA_IRObject__get_def_kind(POA_CORBA_IRObject *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_DefinitionKind (*_impl__get_def_kind)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_IRObject_destroy(POA_CORBA_IRObject *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl_destroy)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_id(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_RepositoryId (*_impl__get_id)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__set_id(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_id)(PortableServer_Servant _servant, const CORBA_RepositoryId value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_name(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Identifier (*_impl__get_name)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__set_name(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_name)(PortableServer_Servant _servant, const CORBA_Identifier value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_version(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_VersionSpec (*_impl__get_version)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__set_version(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_version)(PortableServer_Servant _servant, const CORBA_VersionSpec value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_defined_in(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Container (*_impl__get_defined_in)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_absolute_name(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ScopedName (*_impl__get_absolute_name)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained__get_containing_repository(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Repository (*_impl__get_containing_repository)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained_describe(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Contained_Description* (*_impl_describe)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Contained_move(POA_CORBA_Contained *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl_move)(PortableServer_Servant _servant, const CORBA_Container new_container, const CORBA_Identifier new_name, const CORBA_VersionSpec new_version, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_lookup(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Contained (*_impl_lookup)(PortableServer_Servant _servant, const CORBA_ScopedName search_name, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_contents(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ContainedSeq* (*_impl_contents)(PortableServer_Servant _servant, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_lookup_name(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ContainedSeq* (*_impl_lookup_name)(PortableServer_Servant _servant, const CORBA_Identifier search_name, const CORBA_long levels_to_search, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_describe_contents(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Container_DescriptionSeq* (*_impl_describe_contents)(PortableServer_Servant _servant, const CORBA_DefinitionKind limit_type, const CORBA_boolean exclude_inherited, const CORBA_long max_returned_objs, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_module(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ModuleDef (*_impl_create_module)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_constant(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ConstantDef (*_impl_create_constant)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_any* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_struct(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_StructDef (*_impl_create_struct)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_union(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_UnionDef (*_impl_create_union)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType discriminator_type, const CORBA_UnionMemberSeq* members, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_enum(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_EnumDef (*_impl_create_enum)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_EnumMemberSeq* members, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_alias(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_AliasDef (*_impl_create_alias)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType original_type, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_interface(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_InterfaceDef (*_impl_create_interface)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_InterfaceDefSeq* base_interfaces, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Container_create_exception(POA_CORBA_Container *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ExceptionDef (*_impl_create_exception)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_StructMemberSeq* members, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_IDLType__get_type(POA_CORBA_IDLType *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_lookup_id(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_Contained (*_impl_lookup_id)(PortableServer_Servant _servant, const CORBA_RepositoryId search_id, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_get_primitive(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_PrimitiveDef (*_impl_get_primitive)(PortableServer_Servant _servant, const CORBA_PrimitiveKind kind, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_create_string(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_StringDef (*_impl_create_string)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_create_wstring(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_WstringDef (*_impl_create_wstring)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_create_sequence(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_SequenceDef (*_impl_create_sequence)(PortableServer_Servant _servant, const CORBA_unsigned_long bound, const CORBA_IDLType element_type, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_create_array(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ArrayDef (*_impl_create_array)(PortableServer_Servant _servant, const CORBA_unsigned_long length, const CORBA_IDLType element_type, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_Repository_create_fixed(POA_CORBA_Repository *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_FixedDef (*_impl_create_fixed)(PortableServer_Servant _servant, const CORBA_unsigned_short digits, const CORBA_short scale, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ConstantDef__get_type(POA_CORBA_ConstantDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ConstantDef__get_type_def(POA_CORBA_ConstantDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ConstantDef__set_type_def(POA_CORBA_ConstantDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ConstantDef__get_value(POA_CORBA_ConstantDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_any* (*_impl__get_value)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ConstantDef__set_value(POA_CORBA_ConstantDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_value)(PortableServer_Servant _servant, const CORBA_any* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_StructDef__get_members(POA_CORBA_StructDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_StructMemberSeq* (*_impl__get_members)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_StructDef__set_members(POA_CORBA_StructDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_members)(PortableServer_Servant _servant, const CORBA_StructMemberSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_UnionDef__get_discriminator_type(POA_CORBA_UnionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_discriminator_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_UnionDef__get_discriminator_type_def(POA_CORBA_UnionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_discriminator_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_UnionDef__set_discriminator_type_def(POA_CORBA_UnionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_discriminator_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_UnionDef__get_members(POA_CORBA_UnionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_UnionMemberSeq* (*_impl__get_members)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_UnionDef__set_members(POA_CORBA_UnionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_members)(PortableServer_Servant _servant, const CORBA_UnionMemberSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_EnumDef__get_members(POA_CORBA_EnumDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_EnumMemberSeq* (*_impl__get_members)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_EnumDef__set_members(POA_CORBA_EnumDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_members)(PortableServer_Servant _servant, const CORBA_EnumMemberSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AliasDef__get_original_type_def(POA_CORBA_AliasDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_original_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AliasDef__set_original_type_def(POA_CORBA_AliasDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_original_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_PrimitiveDef__get_kind(POA_CORBA_PrimitiveDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_PrimitiveKind (*_impl__get_kind)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_StringDef__get_bound(POA_CORBA_StringDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_unsigned_long (*_impl__get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_StringDef__set_bound(POA_CORBA_StringDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_WstringDef__get_bound(POA_CORBA_WstringDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_unsigned_long (*_impl__get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_WstringDef__set_bound(POA_CORBA_WstringDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_FixedDef__get_digits(POA_CORBA_FixedDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_unsigned_short (*_impl__get_digits)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_FixedDef__set_digits(POA_CORBA_FixedDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_digits)(PortableServer_Servant _servant, const CORBA_unsigned_short value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_FixedDef__get_scale(POA_CORBA_FixedDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_short (*_impl__get_scale)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_FixedDef__set_scale(POA_CORBA_FixedDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_scale)(PortableServer_Servant _servant, const CORBA_short value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_SequenceDef__get_bound(POA_CORBA_SequenceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_unsigned_long (*_impl__get_bound)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_SequenceDef__set_bound(POA_CORBA_SequenceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_bound)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_SequenceDef__get_element_type(POA_CORBA_SequenceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_element_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_SequenceDef__get_element_type_def(POA_CORBA_SequenceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_element_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_SequenceDef__set_element_type_def(POA_CORBA_SequenceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_element_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ArrayDef__get_length(POA_CORBA_ArrayDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_unsigned_long (*_impl__get_length)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ArrayDef__set_length(POA_CORBA_ArrayDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_length)(PortableServer_Servant _servant, const CORBA_unsigned_long value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ArrayDef__get_element_type(POA_CORBA_ArrayDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_element_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ArrayDef__get_element_type_def(POA_CORBA_ArrayDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_element_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ArrayDef__set_element_type_def(POA_CORBA_ArrayDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_element_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ExceptionDef__get_type(POA_CORBA_ExceptionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ExceptionDef__get_members(POA_CORBA_ExceptionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_StructMemberSeq* (*_impl__get_members)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_ExceptionDef__set_members(POA_CORBA_ExceptionDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_members)(PortableServer_Servant _servant, const CORBA_StructMemberSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AttributeDef__get_type(POA_CORBA_AttributeDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_type)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AttributeDef__get_type_def(POA_CORBA_AttributeDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_type_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AttributeDef__set_type_def(POA_CORBA_AttributeDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_type_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AttributeDef__get_mode(POA_CORBA_AttributeDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_AttributeMode (*_impl__get_mode)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_AttributeDef__set_mode(POA_CORBA_AttributeDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_mode)(PortableServer_Servant _servant, const CORBA_AttributeMode value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_result(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_TypeCode (*_impl__get_result)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_result_def(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_IDLType (*_impl__get_result_def)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__set_result_def(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_result_def)(PortableServer_Servant _servant, const CORBA_IDLType value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_params(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ParDescriptionSeq* (*_impl__get_params)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__set_params(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_params)(PortableServer_Servant _servant, const CORBA_ParDescriptionSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_mode(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_OperationMode (*_impl__get_mode)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__set_mode(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_mode)(PortableServer_Servant _servant, const CORBA_OperationMode value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_contexts(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ContextIdSeq* (*_impl__get_contexts)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__set_contexts(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_contexts)(PortableServer_Servant _servant, const CORBA_ContextIdSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__get_exceptions(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_ExceptionDefSeq* (*_impl__get_exceptions)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_OperationDef__set_exceptions(POA_CORBA_OperationDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_exceptions)(PortableServer_Servant _servant, const CORBA_ExceptionDefSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef__get_base_interfaces(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_InterfaceDefSeq* (*_impl__get_base_interfaces)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef__set_base_interfaces(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, void (*_impl__set_base_interfaces)(PortableServer_Servant _servant, const CORBA_InterfaceDefSeq* value, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef_is_a(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_boolean (*_impl_is_a)(PortableServer_Servant _servant, const CORBA_RepositoryId interface_id, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef_describe_interface(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_InterfaceDef_FullInterfaceDescription* (*_impl_describe_interface)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef_create_attribute(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_AttributeDef (*_impl_create_attribute)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType type, const CORBA_AttributeMode mode, CORBA_Environment *ev));
void _ORBIT_skel_CORBA_InterfaceDef_create_operation(POA_CORBA_InterfaceDef *_ORBIT_servant, GIOPRecvBuffer *_ORBIT_recv_buffer, CORBA_Environment *ev, CORBA_OperationDef (*_impl_create_operation)(PortableServer_Servant _servant, const CORBA_RepositoryId id, const CORBA_Identifier name, const CORBA_VersionSpec version, const CORBA_IDLType result, const CORBA_OperationMode mode, const CORBA_ParDescriptionSeq* params, const CORBA_ExceptionDefSeq* exceptions, const CORBA_ContextIdSeq* contexts, CORBA_Environment *ev));
#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
